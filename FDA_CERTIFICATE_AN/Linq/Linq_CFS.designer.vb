'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="FDA_CFS_CENTER")>  _
Partial Public Class Linq_CFSDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertCER_DRUG_COUNTRY(instance As CER_DRUG_COUNTRY)
    End Sub
  Partial Private Sub UpdateCER_DRUG_COUNTRY(instance As CER_DRUG_COUNTRY)
    End Sub
  Partial Private Sub DeleteCER_DRUG_COUNTRY(instance As CER_DRUG_COUNTRY)
    End Sub
  Partial Private Sub InsertCER_DRUG_IMPORT(instance As CER_DRUG_IMPORT)
    End Sub
  Partial Private Sub UpdateCER_DRUG_IMPORT(instance As CER_DRUG_IMPORT)
    End Sub
  Partial Private Sub DeleteCER_DRUG_IMPORT(instance As CER_DRUG_IMPORT)
    End Sub
  Partial Private Sub InsertCER_DRUG_EDIT_ADDRESS(instance As CER_DRUG_EDIT_ADDRESS)
    End Sub
  Partial Private Sub UpdateCER_DRUG_EDIT_ADDRESS(instance As CER_DRUG_EDIT_ADDRESS)
    End Sub
  Partial Private Sub DeleteCER_DRUG_EDIT_ADDRESS(instance As CER_DRUG_EDIT_ADDRESS)
    End Sub
  Partial Private Sub InsertCER_DRUG_GENNO_MAX(instance As CER_DRUG_GENNO_MAX)
    End Sub
  Partial Private Sub UpdateCER_DRUG_GENNO_MAX(instance As CER_DRUG_GENNO_MAX)
    End Sub
  Partial Private Sub DeleteCER_DRUG_GENNO_MAX(instance As CER_DRUG_GENNO_MAX)
    End Sub
  Partial Private Sub InsertCER_DRUG_HEAD(instance As CER_DRUG_HEAD)
    End Sub
  Partial Private Sub UpdateCER_DRUG_HEAD(instance As CER_DRUG_HEAD)
    End Sub
  Partial Private Sub DeleteCER_DRUG_HEAD(instance As CER_DRUG_HEAD)
    End Sub
  Partial Private Sub InsertCER_DRUG_LORPOR(instance As CER_DRUG_LORPOR)
    End Sub
  Partial Private Sub UpdateCER_DRUG_LORPOR(instance As CER_DRUG_LORPOR)
    End Sub
  Partial Private Sub DeleteCER_DRUG_LORPOR(instance As CER_DRUG_LORPOR)
    End Sub
  Partial Private Sub InsertCER_DRUG_NAME_EXPORT(instance As CER_DRUG_NAME_EXPORT)
    End Sub
  Partial Private Sub UpdateCER_DRUG_NAME_EXPORT(instance As CER_DRUG_NAME_EXPORT)
    End Sub
  Partial Private Sub DeleteCER_DRUG_NAME_EXPORT(instance As CER_DRUG_NAME_EXPORT)
    End Sub
  Partial Private Sub InsertTEMPLATE_ATTACH(instance As TEMPLATE_ATTACH)
    End Sub
  Partial Private Sub UpdateTEMPLATE_ATTACH(instance As TEMPLATE_ATTACH)
    End Sub
  Partial Private Sub DeleteTEMPLATE_ATTACH(instance As TEMPLATE_ATTACH)
    End Sub
  Partial Private Sub InsertGEN_RCV_NUMBER(instance As GEN_RCV_NUMBER)
    End Sub
  Partial Private Sub UpdateGEN_RCV_NUMBER(instance As GEN_RCV_NUMBER)
    End Sub
  Partial Private Sub DeleteGEN_RCV_NUMBER(instance As GEN_RCV_NUMBER)
    End Sub
  Partial Private Sub InsertFILE_ATTACH(instance As FILE_ATTACH)
    End Sub
  Partial Private Sub UpdateFILE_ATTACH(instance As FILE_ATTACH)
    End Sub
  Partial Private Sub DeleteFILE_ATTACH(instance As FILE_ATTACH)
    End Sub
  Partial Private Sub InsertMAS_TEMPLATE_PROCESS(instance As MAS_TEMPLATE_PROCESS)
    End Sub
  Partial Private Sub UpdateMAS_TEMPLATE_PROCESS(instance As MAS_TEMPLATE_PROCESS)
    End Sub
  Partial Private Sub DeleteMAS_TEMPLATE_PROCESS(instance As MAS_TEMPLATE_PROCESS)
    End Sub
  Partial Private Sub InsertMAS_PROCESS(instance As MAS_PROCESS)
    End Sub
  Partial Private Sub UpdateMAS_PROCESS(instance As MAS_PROCESS)
    End Sub
  Partial Private Sub DeleteMAS_PROCESS(instance As MAS_PROCESS)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("FDA_CFS_CENTERConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property CER_DRUG_COUNTRies() As System.Data.Linq.Table(Of CER_DRUG_COUNTRY)
		Get
			Return Me.GetTable(Of CER_DRUG_COUNTRY)
		End Get
	End Property
	
	Public ReadOnly Property CER_DRUG_IMPORTs() As System.Data.Linq.Table(Of CER_DRUG_IMPORT)
		Get
			Return Me.GetTable(Of CER_DRUG_IMPORT)
		End Get
	End Property
	
	Public ReadOnly Property CER_DRUG_EDIT_ADDRESSes() As System.Data.Linq.Table(Of CER_DRUG_EDIT_ADDRESS)
		Get
			Return Me.GetTable(Of CER_DRUG_EDIT_ADDRESS)
		End Get
	End Property
	
	Public ReadOnly Property CER_DRUG_GENNO_MAXes() As System.Data.Linq.Table(Of CER_DRUG_GENNO_MAX)
		Get
			Return Me.GetTable(Of CER_DRUG_GENNO_MAX)
		End Get
	End Property
	
	Public ReadOnly Property CER_DRUG_HEADs() As System.Data.Linq.Table(Of CER_DRUG_HEAD)
		Get
			Return Me.GetTable(Of CER_DRUG_HEAD)
		End Get
	End Property
	
	Public ReadOnly Property CER_DRUG_LORPORs() As System.Data.Linq.Table(Of CER_DRUG_LORPOR)
		Get
			Return Me.GetTable(Of CER_DRUG_LORPOR)
		End Get
	End Property
	
	Public ReadOnly Property CER_DRUG_NAME_EXPORTs() As System.Data.Linq.Table(Of CER_DRUG_NAME_EXPORT)
		Get
			Return Me.GetTable(Of CER_DRUG_NAME_EXPORT)
		End Get
	End Property
	
	Public ReadOnly Property TEMPLATE_ATTACHes() As System.Data.Linq.Table(Of TEMPLATE_ATTACH)
		Get
			Return Me.GetTable(Of TEMPLATE_ATTACH)
		End Get
	End Property
	
	Public ReadOnly Property GEN_RCV_NUMBERs() As System.Data.Linq.Table(Of GEN_RCV_NUMBER)
		Get
			Return Me.GetTable(Of GEN_RCV_NUMBER)
		End Get
	End Property
	
	Public ReadOnly Property FILE_ATTACHes() As System.Data.Linq.Table(Of FILE_ATTACH)
		Get
			Return Me.GetTable(Of FILE_ATTACH)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TEMPLATE_PROCESSes() As System.Data.Linq.Table(Of MAS_TEMPLATE_PROCESS)
		Get
			Return Me.GetTable(Of MAS_TEMPLATE_PROCESS)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PROCESSes() As System.Data.Linq.Table(Of MAS_PROCESS)
		Get
			Return Me.GetTable(Of MAS_PROCESS)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_DRUG_COUNTRY")>  _
Partial Public Class CER_DRUG_COUNTRY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA_CER_NO As System.Nullable(Of Integer)
	
	Private _FK_IDA_COUNTRY As System.Nullable(Of Integer)
	
	Private _COUNTRY_NAME_ENG As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDA_CER_NOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDA_CER_NOChanged()
    End Sub
    Partial Private Sub OnFK_IDA_COUNTRYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDA_COUNTRYChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_NAME_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRY_NAME_ENGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA_CER_NO", DbType:="Int")>  _
	Public Property FK_IDA_CER_NO() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA_CER_NO
		End Get
		Set
			If (Me._FK_IDA_CER_NO.Equals(value) = false) Then
				Me.OnFK_IDA_CER_NOChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA_CER_NO = value
				Me.SendPropertyChanged("FK_IDA_CER_NO")
				Me.OnFK_IDA_CER_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA_COUNTRY", DbType:="Int")>  _
	Public Property FK_IDA_COUNTRY() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA_COUNTRY
		End Get
		Set
			If (Me._FK_IDA_COUNTRY.Equals(value) = false) Then
				Me.OnFK_IDA_COUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA_COUNTRY = value
				Me.SendPropertyChanged("FK_IDA_COUNTRY")
				Me.OnFK_IDA_COUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_NAME_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY_NAME_ENG() As String
		Get
			Return Me._COUNTRY_NAME_ENG
		End Get
		Set
			If (String.Equals(Me._COUNTRY_NAME_ENG, value) = false) Then
				Me.OnCOUNTRY_NAME_ENGChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_NAME_ENG = value
				Me.SendPropertyChanged("COUNTRY_NAME_ENG")
				Me.OnCOUNTRY_NAME_ENGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_DRUG_IMPORT")>  _
Partial Public Class CER_DRUG_IMPORT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _RCVNO As String
	
	Private _RCVDATE As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _CITIZEN_UPLOAD As String
	
	Private _CITIZEN_DOWNLOAD As String
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _CITIZEN_APPROVED As String
	
	Private _LCNSID As String
	
	Private _PROCESS_ID As String
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _STAFF_NAME As String
	
	Private _THANM As String
	
	Private _LCNTYPE As String
	
	Private _LCNNO_DISPLAY As String
	
	Private _ADDR As String
	
	Private _SOI As String
	
	Private _MOO As String
	
	Private _ROAD As String
	
	Private _THMBLNM As String
	
	Private _AMPHRNM As String
	
	Private _CHNGWTNM As String
	
	Private _TEL As String
	
	Private _LICEN As String
	
	Private _LICEN_AGE As String
	
	Private _LICEN_NATION As String
	
	Private _LICEN_ADDR As String
	
	Private _LICEN_SOI As String
	
	Private _LICEN_MOO As String
	
	Private _LICEN_ROAD As String
	
	Private _LICEN_THMBLNM As String
	
	Private _LICEN_AMPHRNM As String
	
	Private _LICEN_CHGWTNM As String
	
	Private _LICEN_TEL As String
	
	Private _CHECK_POINT As String
	
	Private _DRUG_ADDR As String
	
	Private _DRUG_SOI As String
	
	Private _DRUG_MOO As String
	
	Private _DRUG_ROAD As String
	
	Private _DRUG_THMBLNM As String
	
	Private _DRUG_AMPHRNM As String
	
	Private _DRUG_CHNGWTNM As String
	
	Private _REF_CODE As String
	
	Private _XML_NAME As String
	
	Private _APPROVE_STAFF As String
	
	Private _APPROVE_POSITION As String
	
	Private _NEWCODE As String
	
	Private _RGTNO As String
	
	Private _RGTTPCD As String
	
	Private _UNIT_CER As String
	
	Private _COMMENT_ADMIN As String
	
	Private _DATE_APPROVED As System.Nullable(Of Date)
	
	Private _DATE_EXP As System.Nullable(Of Date)
	
	Private _DATE_PRINT_PAYMENT As System.Nullable(Of Date)
	
	Private _PVNCD As String
	
	Private _CER_TYPE As String
	
	Private _WRITE_DATE As System.Nullable(Of Date)
	
	Private _WRITE_AT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnRCVDATEChanging(value As String)
    End Sub
    Partial Private Sub OnRCVDATEChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_UPLOADChanged()
    End Sub
    Partial Private Sub OnCITIZEN_DOWNLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_DOWNLOADChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_APPROVEDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_APPROVEDChanged()
    End Sub
    Partial Private Sub OnLCNSIDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNSIDChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTAFF_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_NAMEChanged()
    End Sub
    Partial Private Sub OnTHANMChanging(value As String)
    End Sub
    Partial Private Sub OnTHANMChanged()
    End Sub
    Partial Private Sub OnLCNTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnLCNTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnADDRChanging(value As String)
    End Sub
    Partial Private Sub OnADDRChanged()
    End Sub
    Partial Private Sub OnSOIChanging(value As String)
    End Sub
    Partial Private Sub OnSOIChanged()
    End Sub
    Partial Private Sub OnMOOChanging(value As String)
    End Sub
    Partial Private Sub OnMOOChanged()
    End Sub
    Partial Private Sub OnROADChanging(value As String)
    End Sub
    Partial Private Sub OnROADChanged()
    End Sub
    Partial Private Sub OnTHMBLNMChanging(value As String)
    End Sub
    Partial Private Sub OnTHMBLNMChanged()
    End Sub
    Partial Private Sub OnAMPHRNMChanging(value As String)
    End Sub
    Partial Private Sub OnAMPHRNMChanged()
    End Sub
    Partial Private Sub OnCHNGWTNMChanging(value As String)
    End Sub
    Partial Private Sub OnCHNGWTNMChanged()
    End Sub
    Partial Private Sub OnTELChanging(value As String)
    End Sub
    Partial Private Sub OnTELChanged()
    End Sub
    Partial Private Sub OnLICENChanging(value As String)
    End Sub
    Partial Private Sub OnLICENChanged()
    End Sub
    Partial Private Sub OnLICEN_AGEChanging(value As String)
    End Sub
    Partial Private Sub OnLICEN_AGEChanged()
    End Sub
    Partial Private Sub OnLICEN_NATIONChanging(value As String)
    End Sub
    Partial Private Sub OnLICEN_NATIONChanged()
    End Sub
    Partial Private Sub OnLICEN_ADDRChanging(value As String)
    End Sub
    Partial Private Sub OnLICEN_ADDRChanged()
    End Sub
    Partial Private Sub OnLICEN_SOIChanging(value As String)
    End Sub
    Partial Private Sub OnLICEN_SOIChanged()
    End Sub
    Partial Private Sub OnLICEN_MOOChanging(value As String)
    End Sub
    Partial Private Sub OnLICEN_MOOChanged()
    End Sub
    Partial Private Sub OnLICEN_ROADChanging(value As String)
    End Sub
    Partial Private Sub OnLICEN_ROADChanged()
    End Sub
    Partial Private Sub OnLICEN_THMBLNMChanging(value As String)
    End Sub
    Partial Private Sub OnLICEN_THMBLNMChanged()
    End Sub
    Partial Private Sub OnLICEN_AMPHRNMChanging(value As String)
    End Sub
    Partial Private Sub OnLICEN_AMPHRNMChanged()
    End Sub
    Partial Private Sub OnLICEN_CHGWTNMChanging(value As String)
    End Sub
    Partial Private Sub OnLICEN_CHGWTNMChanged()
    End Sub
    Partial Private Sub OnLICEN_TELChanging(value As String)
    End Sub
    Partial Private Sub OnLICEN_TELChanged()
    End Sub
    Partial Private Sub OnCHECK_POINTChanging(value As String)
    End Sub
    Partial Private Sub OnCHECK_POINTChanged()
    End Sub
    Partial Private Sub OnDRUG_ADDRChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_ADDRChanged()
    End Sub
    Partial Private Sub OnDRUG_SOIChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SOIChanged()
    End Sub
    Partial Private Sub OnDRUG_MOOChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_MOOChanged()
    End Sub
    Partial Private Sub OnDRUG_ROADChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_ROADChanged()
    End Sub
    Partial Private Sub OnDRUG_THMBLNMChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_THMBLNMChanged()
    End Sub
    Partial Private Sub OnDRUG_AMPHRNMChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_AMPHRNMChanged()
    End Sub
    Partial Private Sub OnDRUG_CHNGWTNMChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_CHNGWTNMChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnXML_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnXML_NAMEChanged()
    End Sub
    Partial Private Sub OnAPPROVE_STAFFChanging(value As String)
    End Sub
    Partial Private Sub OnAPPROVE_STAFFChanged()
    End Sub
    Partial Private Sub OnAPPROVE_POSITIONChanging(value As String)
    End Sub
    Partial Private Sub OnAPPROVE_POSITIONChanged()
    End Sub
    Partial Private Sub OnNEWCODEChanging(value As String)
    End Sub
    Partial Private Sub OnNEWCODEChanged()
    End Sub
    Partial Private Sub OnRGTNOChanging(value As String)
    End Sub
    Partial Private Sub OnRGTNOChanged()
    End Sub
    Partial Private Sub OnRGTTPCDChanging(value As String)
    End Sub
    Partial Private Sub OnRGTTPCDChanged()
    End Sub
    Partial Private Sub OnUNIT_CERChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_CERChanged()
    End Sub
    Partial Private Sub OnCOMMENT_ADMINChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENT_ADMINChanged()
    End Sub
    Partial Private Sub OnDATE_APPROVEDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_APPROVEDChanged()
    End Sub
    Partial Private Sub OnDATE_EXPChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_EXPChanged()
    End Sub
    Partial Private Sub OnDATE_PRINT_PAYMENTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_PRINT_PAYMENTChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As String)
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnCER_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnCER_TYPEChanged()
    End Sub
    Partial Private Sub OnWRITE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnWRITE_DATEChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE", DbType:="NVarChar(MAX)")>  _
	Public Property RCVDATE() As String
		Get
			Return Me._RCVDATE
		End Get
		Set
			If (String.Equals(Me._RCVDATE, value) = false) Then
				Me.OnRCVDATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE = value
				Me.SendPropertyChanged("RCVDATE")
				Me.OnRCVDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_UPLOAD() As String
		Get
			Return Me._CITIZEN_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_UPLOAD, value) = false) Then
				Me.OnCITIZEN_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_UPLOAD")
				Me.OnCITIZEN_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_DOWNLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_DOWNLOAD() As String
		Get
			Return Me._CITIZEN_DOWNLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_DOWNLOAD, value) = false) Then
				Me.OnCITIZEN_DOWNLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_DOWNLOAD = value
				Me.SendPropertyChanged("CITIZEN_DOWNLOAD")
				Me.OnCITIZEN_DOWNLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_APPROVED", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_APPROVED() As String
		Get
			Return Me._CITIZEN_APPROVED
		End Get
		Set
			If (String.Equals(Me._CITIZEN_APPROVED, value) = false) Then
				Me.OnCITIZEN_APPROVEDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_APPROVED = value
				Me.SendPropertyChanged("CITIZEN_APPROVED")
				Me.OnCITIZEN_APPROVEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNSID", DbType:="NVarChar(MAX)")>  _
	Public Property LCNSID() As String
		Get
			Return Me._LCNSID
		End Get
		Set
			If (String.Equals(Me._LCNSID, value) = false) Then
				Me.OnLCNSIDChanging(value)
				Me.SendPropertyChanging
				Me._LCNSID = value
				Me.SendPropertyChanged("LCNSID")
				Me.OnLCNSIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_NAME() As String
		Get
			Return Me._STAFF_NAME
		End Get
		Set
			If (String.Equals(Me._STAFF_NAME, value) = false) Then
				Me.OnSTAFF_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_NAME = value
				Me.SendPropertyChanged("STAFF_NAME")
				Me.OnSTAFF_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_THANM", DbType:="NVarChar(MAX)")>  _
	Public Property THANM() As String
		Get
			Return Me._THANM
		End Get
		Set
			If (String.Equals(Me._THANM, value) = false) Then
				Me.OnTHANMChanging(value)
				Me.SendPropertyChanging
				Me._THANM = value
				Me.SendPropertyChanged("THANM")
				Me.OnTHANMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNTYPE", DbType:="NVarChar(MAX)")>  _
	Public Property LCNTYPE() As String
		Get
			Return Me._LCNTYPE
		End Get
		Set
			If (String.Equals(Me._LCNTYPE, value) = false) Then
				Me.OnLCNTYPEChanging(value)
				Me.SendPropertyChanging
				Me._LCNTYPE = value
				Me.SendPropertyChanged("LCNTYPE")
				Me.OnLCNTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO_DISPLAY() As String
		Get
			Return Me._LCNNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._LCNNO_DISPLAY, value) = false) Then
				Me.OnLCNNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO_DISPLAY = value
				Me.SendPropertyChanged("LCNNO_DISPLAY")
				Me.OnLCNNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDR", DbType:="NVarChar(MAX)")>  _
	Public Property ADDR() As String
		Get
			Return Me._ADDR
		End Get
		Set
			If (String.Equals(Me._ADDR, value) = false) Then
				Me.OnADDRChanging(value)
				Me.SendPropertyChanging
				Me._ADDR = value
				Me.SendPropertyChanged("ADDR")
				Me.OnADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOI", DbType:="NVarChar(MAX)")>  _
	Public Property SOI() As String
		Get
			Return Me._SOI
		End Get
		Set
			If (String.Equals(Me._SOI, value) = false) Then
				Me.OnSOIChanging(value)
				Me.SendPropertyChanging
				Me._SOI = value
				Me.SendPropertyChanged("SOI")
				Me.OnSOIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOO", DbType:="NVarChar(MAX)")>  _
	Public Property MOO() As String
		Get
			Return Me._MOO
		End Get
		Set
			If (String.Equals(Me._MOO, value) = false) Then
				Me.OnMOOChanging(value)
				Me.SendPropertyChanging
				Me._MOO = value
				Me.SendPropertyChanged("MOO")
				Me.OnMOOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROAD", DbType:="NVarChar(MAX)")>  _
	Public Property ROAD() As String
		Get
			Return Me._ROAD
		End Get
		Set
			If (String.Equals(Me._ROAD, value) = false) Then
				Me.OnROADChanging(value)
				Me.SendPropertyChanging
				Me._ROAD = value
				Me.SendPropertyChanged("ROAD")
				Me.OnROADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_THMBLNM", DbType:="NVarChar(MAX)")>  _
	Public Property THMBLNM() As String
		Get
			Return Me._THMBLNM
		End Get
		Set
			If (String.Equals(Me._THMBLNM, value) = false) Then
				Me.OnTHMBLNMChanging(value)
				Me.SendPropertyChanging
				Me._THMBLNM = value
				Me.SendPropertyChanged("THMBLNM")
				Me.OnTHMBLNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHRNM", DbType:="NVarChar(MAX)")>  _
	Public Property AMPHRNM() As String
		Get
			Return Me._AMPHRNM
		End Get
		Set
			If (String.Equals(Me._AMPHRNM, value) = false) Then
				Me.OnAMPHRNMChanging(value)
				Me.SendPropertyChanging
				Me._AMPHRNM = value
				Me.SendPropertyChanged("AMPHRNM")
				Me.OnAMPHRNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHNGWTNM", DbType:="NVarChar(MAX)")>  _
	Public Property CHNGWTNM() As String
		Get
			Return Me._CHNGWTNM
		End Get
		Set
			If (String.Equals(Me._CHNGWTNM, value) = false) Then
				Me.OnCHNGWTNMChanging(value)
				Me.SendPropertyChanging
				Me._CHNGWTNM = value
				Me.SendPropertyChanged("CHNGWTNM")
				Me.OnCHNGWTNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL", DbType:="NVarChar(MAX)")>  _
	Public Property TEL() As String
		Get
			Return Me._TEL
		End Get
		Set
			If (String.Equals(Me._TEL, value) = false) Then
				Me.OnTELChanging(value)
				Me.SendPropertyChanging
				Me._TEL = value
				Me.SendPropertyChanged("TEL")
				Me.OnTELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICEN", DbType:="NVarChar(MAX)")>  _
	Public Property LICEN() As String
		Get
			Return Me._LICEN
		End Get
		Set
			If (String.Equals(Me._LICEN, value) = false) Then
				Me.OnLICENChanging(value)
				Me.SendPropertyChanging
				Me._LICEN = value
				Me.SendPropertyChanged("LICEN")
				Me.OnLICENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICEN_AGE", DbType:="NVarChar(MAX)")>  _
	Public Property LICEN_AGE() As String
		Get
			Return Me._LICEN_AGE
		End Get
		Set
			If (String.Equals(Me._LICEN_AGE, value) = false) Then
				Me.OnLICEN_AGEChanging(value)
				Me.SendPropertyChanging
				Me._LICEN_AGE = value
				Me.SendPropertyChanged("LICEN_AGE")
				Me.OnLICEN_AGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICEN_NATION", DbType:="NVarChar(MAX)")>  _
	Public Property LICEN_NATION() As String
		Get
			Return Me._LICEN_NATION
		End Get
		Set
			If (String.Equals(Me._LICEN_NATION, value) = false) Then
				Me.OnLICEN_NATIONChanging(value)
				Me.SendPropertyChanging
				Me._LICEN_NATION = value
				Me.SendPropertyChanged("LICEN_NATION")
				Me.OnLICEN_NATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICEN_ADDR", DbType:="NVarChar(MAX)")>  _
	Public Property LICEN_ADDR() As String
		Get
			Return Me._LICEN_ADDR
		End Get
		Set
			If (String.Equals(Me._LICEN_ADDR, value) = false) Then
				Me.OnLICEN_ADDRChanging(value)
				Me.SendPropertyChanging
				Me._LICEN_ADDR = value
				Me.SendPropertyChanged("LICEN_ADDR")
				Me.OnLICEN_ADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICEN_SOI", DbType:="NVarChar(MAX)")>  _
	Public Property LICEN_SOI() As String
		Get
			Return Me._LICEN_SOI
		End Get
		Set
			If (String.Equals(Me._LICEN_SOI, value) = false) Then
				Me.OnLICEN_SOIChanging(value)
				Me.SendPropertyChanging
				Me._LICEN_SOI = value
				Me.SendPropertyChanged("LICEN_SOI")
				Me.OnLICEN_SOIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICEN_MOO", DbType:="NVarChar(MAX)")>  _
	Public Property LICEN_MOO() As String
		Get
			Return Me._LICEN_MOO
		End Get
		Set
			If (String.Equals(Me._LICEN_MOO, value) = false) Then
				Me.OnLICEN_MOOChanging(value)
				Me.SendPropertyChanging
				Me._LICEN_MOO = value
				Me.SendPropertyChanged("LICEN_MOO")
				Me.OnLICEN_MOOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICEN_ROAD", DbType:="NVarChar(MAX)")>  _
	Public Property LICEN_ROAD() As String
		Get
			Return Me._LICEN_ROAD
		End Get
		Set
			If (String.Equals(Me._LICEN_ROAD, value) = false) Then
				Me.OnLICEN_ROADChanging(value)
				Me.SendPropertyChanging
				Me._LICEN_ROAD = value
				Me.SendPropertyChanged("LICEN_ROAD")
				Me.OnLICEN_ROADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICEN_THMBLNM", DbType:="NVarChar(MAX)")>  _
	Public Property LICEN_THMBLNM() As String
		Get
			Return Me._LICEN_THMBLNM
		End Get
		Set
			If (String.Equals(Me._LICEN_THMBLNM, value) = false) Then
				Me.OnLICEN_THMBLNMChanging(value)
				Me.SendPropertyChanging
				Me._LICEN_THMBLNM = value
				Me.SendPropertyChanged("LICEN_THMBLNM")
				Me.OnLICEN_THMBLNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICEN_AMPHRNM", DbType:="NVarChar(MAX)")>  _
	Public Property LICEN_AMPHRNM() As String
		Get
			Return Me._LICEN_AMPHRNM
		End Get
		Set
			If (String.Equals(Me._LICEN_AMPHRNM, value) = false) Then
				Me.OnLICEN_AMPHRNMChanging(value)
				Me.SendPropertyChanging
				Me._LICEN_AMPHRNM = value
				Me.SendPropertyChanged("LICEN_AMPHRNM")
				Me.OnLICEN_AMPHRNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICEN_CHGWTNM", DbType:="NVarChar(MAX)")>  _
	Public Property LICEN_CHGWTNM() As String
		Get
			Return Me._LICEN_CHGWTNM
		End Get
		Set
			If (String.Equals(Me._LICEN_CHGWTNM, value) = false) Then
				Me.OnLICEN_CHGWTNMChanging(value)
				Me.SendPropertyChanging
				Me._LICEN_CHGWTNM = value
				Me.SendPropertyChanged("LICEN_CHGWTNM")
				Me.OnLICEN_CHGWTNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICEN_TEL", DbType:="NVarChar(MAX)")>  _
	Public Property LICEN_TEL() As String
		Get
			Return Me._LICEN_TEL
		End Get
		Set
			If (String.Equals(Me._LICEN_TEL, value) = false) Then
				Me.OnLICEN_TELChanging(value)
				Me.SendPropertyChanging
				Me._LICEN_TEL = value
				Me.SendPropertyChanged("LICEN_TEL")
				Me.OnLICEN_TELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_POINT", DbType:="NVarChar(MAX)")>  _
	Public Property CHECK_POINT() As String
		Get
			Return Me._CHECK_POINT
		End Get
		Set
			If (String.Equals(Me._CHECK_POINT, value) = false) Then
				Me.OnCHECK_POINTChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_POINT = value
				Me.SendPropertyChanged("CHECK_POINT")
				Me.OnCHECK_POINTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_ADDR", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_ADDR() As String
		Get
			Return Me._DRUG_ADDR
		End Get
		Set
			If (String.Equals(Me._DRUG_ADDR, value) = false) Then
				Me.OnDRUG_ADDRChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_ADDR = value
				Me.SendPropertyChanged("DRUG_ADDR")
				Me.OnDRUG_ADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SOI", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SOI() As String
		Get
			Return Me._DRUG_SOI
		End Get
		Set
			If (String.Equals(Me._DRUG_SOI, value) = false) Then
				Me.OnDRUG_SOIChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SOI = value
				Me.SendPropertyChanged("DRUG_SOI")
				Me.OnDRUG_SOIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_MOO", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_MOO() As String
		Get
			Return Me._DRUG_MOO
		End Get
		Set
			If (String.Equals(Me._DRUG_MOO, value) = false) Then
				Me.OnDRUG_MOOChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_MOO = value
				Me.SendPropertyChanged("DRUG_MOO")
				Me.OnDRUG_MOOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_ROAD", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_ROAD() As String
		Get
			Return Me._DRUG_ROAD
		End Get
		Set
			If (String.Equals(Me._DRUG_ROAD, value) = false) Then
				Me.OnDRUG_ROADChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_ROAD = value
				Me.SendPropertyChanged("DRUG_ROAD")
				Me.OnDRUG_ROADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_THMBLNM", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_THMBLNM() As String
		Get
			Return Me._DRUG_THMBLNM
		End Get
		Set
			If (String.Equals(Me._DRUG_THMBLNM, value) = false) Then
				Me.OnDRUG_THMBLNMChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_THMBLNM = value
				Me.SendPropertyChanged("DRUG_THMBLNM")
				Me.OnDRUG_THMBLNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_AMPHRNM", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_AMPHRNM() As String
		Get
			Return Me._DRUG_AMPHRNM
		End Get
		Set
			If (String.Equals(Me._DRUG_AMPHRNM, value) = false) Then
				Me.OnDRUG_AMPHRNMChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_AMPHRNM = value
				Me.SendPropertyChanged("DRUG_AMPHRNM")
				Me.OnDRUG_AMPHRNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_CHNGWTNM", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_CHNGWTNM() As String
		Get
			Return Me._DRUG_CHNGWTNM
		End Get
		Set
			If (String.Equals(Me._DRUG_CHNGWTNM, value) = false) Then
				Me.OnDRUG_CHNGWTNMChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_CHNGWTNM = value
				Me.SendPropertyChanged("DRUG_CHNGWTNM")
				Me.OnDRUG_CHNGWTNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property XML_NAME() As String
		Get
			Return Me._XML_NAME
		End Get
		Set
			If (String.Equals(Me._XML_NAME, value) = false) Then
				Me.OnXML_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._XML_NAME = value
				Me.SendPropertyChanged("XML_NAME")
				Me.OnXML_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVE_STAFF", DbType:="NVarChar(MAX)")>  _
	Public Property APPROVE_STAFF() As String
		Get
			Return Me._APPROVE_STAFF
		End Get
		Set
			If (String.Equals(Me._APPROVE_STAFF, value) = false) Then
				Me.OnAPPROVE_STAFFChanging(value)
				Me.SendPropertyChanging
				Me._APPROVE_STAFF = value
				Me.SendPropertyChanged("APPROVE_STAFF")
				Me.OnAPPROVE_STAFFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVE_POSITION", DbType:="NVarChar(MAX)")>  _
	Public Property APPROVE_POSITION() As String
		Get
			Return Me._APPROVE_POSITION
		End Get
		Set
			If (String.Equals(Me._APPROVE_POSITION, value) = false) Then
				Me.OnAPPROVE_POSITIONChanging(value)
				Me.SendPropertyChanging
				Me._APPROVE_POSITION = value
				Me.SendPropertyChanged("APPROVE_POSITION")
				Me.OnAPPROVE_POSITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEWCODE", DbType:="NVarChar(MAX)")>  _
	Public Property NEWCODE() As String
		Get
			Return Me._NEWCODE
		End Get
		Set
			If (String.Equals(Me._NEWCODE, value) = false) Then
				Me.OnNEWCODEChanging(value)
				Me.SendPropertyChanging
				Me._NEWCODE = value
				Me.SendPropertyChanged("NEWCODE")
				Me.OnNEWCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTNO", DbType:="NVarChar(MAX)")>  _
	Public Property RGTNO() As String
		Get
			Return Me._RGTNO
		End Get
		Set
			If (String.Equals(Me._RGTNO, value) = false) Then
				Me.OnRGTNOChanging(value)
				Me.SendPropertyChanging
				Me._RGTNO = value
				Me.SendPropertyChanged("RGTNO")
				Me.OnRGTNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTTPCD", DbType:="NVarChar(MAX)")>  _
	Public Property RGTTPCD() As String
		Get
			Return Me._RGTTPCD
		End Get
		Set
			If (String.Equals(Me._RGTTPCD, value) = false) Then
				Me.OnRGTTPCDChanging(value)
				Me.SendPropertyChanging
				Me._RGTTPCD = value
				Me.SendPropertyChanged("RGTTPCD")
				Me.OnRGTTPCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_CER", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_CER() As String
		Get
			Return Me._UNIT_CER
		End Get
		Set
			If (String.Equals(Me._UNIT_CER, value) = false) Then
				Me.OnUNIT_CERChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_CER = value
				Me.SendPropertyChanged("UNIT_CER")
				Me.OnUNIT_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENT_ADMIN", DbType:="NVarChar(MAX)")>  _
	Public Property COMMENT_ADMIN() As String
		Get
			Return Me._COMMENT_ADMIN
		End Get
		Set
			If (String.Equals(Me._COMMENT_ADMIN, value) = false) Then
				Me.OnCOMMENT_ADMINChanging(value)
				Me.SendPropertyChanging
				Me._COMMENT_ADMIN = value
				Me.SendPropertyChanged("COMMENT_ADMIN")
				Me.OnCOMMENT_ADMINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_APPROVED", DbType:="DateTime")>  _
	Public Property DATE_APPROVED() As System.Nullable(Of Date)
		Get
			Return Me._DATE_APPROVED
		End Get
		Set
			If (Me._DATE_APPROVED.Equals(value) = false) Then
				Me.OnDATE_APPROVEDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_APPROVED = value
				Me.SendPropertyChanged("DATE_APPROVED")
				Me.OnDATE_APPROVEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_EXP", DbType:="DateTime")>  _
	Public Property DATE_EXP() As System.Nullable(Of Date)
		Get
			Return Me._DATE_EXP
		End Get
		Set
			If (Me._DATE_EXP.Equals(value) = false) Then
				Me.OnDATE_EXPChanging(value)
				Me.SendPropertyChanging
				Me._DATE_EXP = value
				Me.SendPropertyChanged("DATE_EXP")
				Me.OnDATE_EXPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_PRINT_PAYMENT", DbType:="DateTime")>  _
	Public Property DATE_PRINT_PAYMENT() As System.Nullable(Of Date)
		Get
			Return Me._DATE_PRINT_PAYMENT
		End Get
		Set
			If (Me._DATE_PRINT_PAYMENT.Equals(value) = false) Then
				Me.OnDATE_PRINT_PAYMENTChanging(value)
				Me.SendPropertyChanging
				Me._DATE_PRINT_PAYMENT = value
				Me.SendPropertyChanged("DATE_PRINT_PAYMENT")
				Me.OnDATE_PRINT_PAYMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="NVarChar(MAX)")>  _
	Public Property PVNCD() As String
		Get
			Return Me._PVNCD
		End Get
		Set
			If (String.Equals(Me._PVNCD, value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_TYPE", DbType:="NVarChar(50)")>  _
	Public Property CER_TYPE() As String
		Get
			Return Me._CER_TYPE
		End Get
		Set
			If (String.Equals(Me._CER_TYPE, value) = false) Then
				Me.OnCER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CER_TYPE = value
				Me.SendPropertyChanged("CER_TYPE")
				Me.OnCER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_DATE", DbType:="DateTime")>  _
	Public Property WRITE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._WRITE_DATE
		End Get
		Set
			If (Me._WRITE_DATE.Equals(value) = false) Then
				Me.OnWRITE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_DATE = value
				Me.SendPropertyChanged("WRITE_DATE")
				Me.OnWRITE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_DRUG_EDIT_ADDRESS")>  _
Partial Public Class CER_DRUG_EDIT_ADDRESS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_REGISTER_IDA As String
	
	Private _ENG_NAME As String
	
	Private _ENG_ADDRESS As String
	
	Private _ENG_SOI As String
	
	Private _ENG_ROAD As String
	
	Private _ENG_AMPRE As String
	
	Private _ENG_CHANGWAT As String
	
	Private _PHONE_NUMBER As String
	
	Private _ENG_THMBR As String
	
	Private _LCNNO As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_REGISTER_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_REGISTER_IDAChanged()
    End Sub
    Partial Private Sub OnENG_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnENG_NAMEChanged()
    End Sub
    Partial Private Sub OnENG_ADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnENG_ADDRESSChanged()
    End Sub
    Partial Private Sub OnENG_SOIChanging(value As String)
    End Sub
    Partial Private Sub OnENG_SOIChanged()
    End Sub
    Partial Private Sub OnENG_ROADChanging(value As String)
    End Sub
    Partial Private Sub OnENG_ROADChanged()
    End Sub
    Partial Private Sub OnENG_AMPREChanging(value As String)
    End Sub
    Partial Private Sub OnENG_AMPREChanged()
    End Sub
    Partial Private Sub OnENG_CHANGWATChanging(value As String)
    End Sub
    Partial Private Sub OnENG_CHANGWATChanged()
    End Sub
    Partial Private Sub OnPHONE_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnPHONE_NUMBERChanged()
    End Sub
    Partial Private Sub OnENG_THMBRChanging(value As String)
    End Sub
    Partial Private Sub OnENG_THMBRChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_REGISTER_IDA", DbType:="NVarChar(50)")>  _
	Public Property FK_REGISTER_IDA() As String
		Get
			Return Me._FK_REGISTER_IDA
		End Get
		Set
			If (String.Equals(Me._FK_REGISTER_IDA, value) = false) Then
				Me.OnFK_REGISTER_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_REGISTER_IDA = value
				Me.SendPropertyChanged("FK_REGISTER_IDA")
				Me.OnFK_REGISTER_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENG_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ENG_NAME() As String
		Get
			Return Me._ENG_NAME
		End Get
		Set
			If (String.Equals(Me._ENG_NAME, value) = false) Then
				Me.OnENG_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ENG_NAME = value
				Me.SendPropertyChanged("ENG_NAME")
				Me.OnENG_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENG_ADDRESS", DbType:="NVarChar(MAX)")>  _
	Public Property ENG_ADDRESS() As String
		Get
			Return Me._ENG_ADDRESS
		End Get
		Set
			If (String.Equals(Me._ENG_ADDRESS, value) = false) Then
				Me.OnENG_ADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._ENG_ADDRESS = value
				Me.SendPropertyChanged("ENG_ADDRESS")
				Me.OnENG_ADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENG_SOI", DbType:="NVarChar(MAX)")>  _
	Public Property ENG_SOI() As String
		Get
			Return Me._ENG_SOI
		End Get
		Set
			If (String.Equals(Me._ENG_SOI, value) = false) Then
				Me.OnENG_SOIChanging(value)
				Me.SendPropertyChanging
				Me._ENG_SOI = value
				Me.SendPropertyChanged("ENG_SOI")
				Me.OnENG_SOIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENG_ROAD", DbType:="NVarChar(MAX)")>  _
	Public Property ENG_ROAD() As String
		Get
			Return Me._ENG_ROAD
		End Get
		Set
			If (String.Equals(Me._ENG_ROAD, value) = false) Then
				Me.OnENG_ROADChanging(value)
				Me.SendPropertyChanging
				Me._ENG_ROAD = value
				Me.SendPropertyChanged("ENG_ROAD")
				Me.OnENG_ROADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENG_AMPRE", DbType:="NVarChar(MAX)")>  _
	Public Property ENG_AMPRE() As String
		Get
			Return Me._ENG_AMPRE
		End Get
		Set
			If (String.Equals(Me._ENG_AMPRE, value) = false) Then
				Me.OnENG_AMPREChanging(value)
				Me.SendPropertyChanging
				Me._ENG_AMPRE = value
				Me.SendPropertyChanged("ENG_AMPRE")
				Me.OnENG_AMPREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENG_CHANGWAT", DbType:="NVarChar(MAX)")>  _
	Public Property ENG_CHANGWAT() As String
		Get
			Return Me._ENG_CHANGWAT
		End Get
		Set
			If (String.Equals(Me._ENG_CHANGWAT, value) = false) Then
				Me.OnENG_CHANGWATChanging(value)
				Me.SendPropertyChanging
				Me._ENG_CHANGWAT = value
				Me.SendPropertyChanged("ENG_CHANGWAT")
				Me.OnENG_CHANGWATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE_NUMBER", DbType:="NVarChar(50)")>  _
	Public Property PHONE_NUMBER() As String
		Get
			Return Me._PHONE_NUMBER
		End Get
		Set
			If (String.Equals(Me._PHONE_NUMBER, value) = false) Then
				Me.OnPHONE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._PHONE_NUMBER = value
				Me.SendPropertyChanged("PHONE_NUMBER")
				Me.OnPHONE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENG_THMBR", DbType:="NVarChar(MAX)")>  _
	Public Property ENG_THMBR() As String
		Get
			Return Me._ENG_THMBR
		End Get
		Set
			If (String.Equals(Me._ENG_THMBR, value) = false) Then
				Me.OnENG_THMBRChanging(value)
				Me.SendPropertyChanging
				Me._ENG_THMBR = value
				Me.SendPropertyChanged("ENG_THMBR")
				Me.OnENG_THMBRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="Int")>  _
	Public Property LCNNO() As System.Nullable(Of Integer)
		Get
			Return Me._LCNNO
		End Get
		Set
			If (Me._LCNNO.Equals(value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_DRUG_GENNO_MAX")>  _
Partial Public Class CER_DRUG_GENNO_MAX
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As System.Nullable(Of Integer)
	
	Private _GENNO As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As String)
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", DbType:="Int")>  _
	Public Property IDA() As System.Nullable(Of Integer)
		Get
			Return Me._IDA
		End Get
		Set
			If (Me._IDA.Equals(value) = false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property GENNO() As String
		Get
			Return Me._GENNO
		End Get
		Set
			If (String.Equals(Me._GENNO, value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="Date")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_DRUG_HEAD")>  _
Partial Public Class CER_DRUG_HEAD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _RCVNO As String
	
	Private _RCVDATE As System.Nullable(Of Date)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _CITIZEN_UPLOAD As String
	
	Private _CITIZEN_DOWNLOAD As String
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _LCNSID As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _ADDRESS_ID As System.Nullable(Of Integer)
	
	Private _FK_PROCESS_ID As String
	
	Private _REF_CODE As String
	
	Private _COMMENT_ADMIN As String
	
	Private _COMMENT_BUSINESS As String
	
	Private _UNTIL_DATE As System.Nullable(Of Date)
	
	Private _CITIZEN_APPROVED As String
	
	Private _IMPORT_TO_COUNTRY As String
	
	Private _TRADNAME As String
	
	Private _FORMULA As String
	
	Private _EXPORT_FROM_COUNTRY As String
	
	Private _YN_STATUS_LICENSE_HOLDER As String
	
	Private _REGISTER_NEWCODE As String
	
	Private _YN_SUMMARY_APPENDED As String
	
	Private _YN_WITH_THE_LICENSE As String
	
	Private _YN_FROM_IS_PROCESS As String
	
	Private _YN_FROM_BEEN_INSPECTED As String
	
	Private _YN_BY_ANOTHER_PARTY As String
	
	Private _INPUT_IF_NO_EXPLAIN As String
	
	Private _YN_AUTHORIZATION_LACKING As String
	
	Private _CPP_YN_V_I_II As String
	
	Private _CPP_YN_V_I_III As String
	
	Private _CPP_YN_V_IIA_IIII As String
	
	Private _CPP_YN_V_IIA_V As String
	
	Private _CPP_YN_V_IIB_II As String
	
	Private _CPP_YN_V_IIB_III_I As String
	
	Private _CPP_YN_V_III As String
	
	Private _CPP_YN_V_III_I As String
	
	Private _CPP_YN_V_III_II As String
	
	Private _CPP_YN_V_III_III As String
	
	Private _CPP_YN_V_IIII As String
	
	Private _CPP_V_IF_NO_EXPLAIN As String
	
	Private _CPP_YN_IIA_III As String
	
	Private _CPP_YN_IIB_III_II As String
	
	Private _CPP_YN_IIB_III_III As String
	
	Private _CPP_YN_IIB_III_IIII As String
	
	Private _XML_NAME As String
	
	Private _YN_Health_Organization As String
	
	Private _INPUT_Applicant_for_certificate As String
	
	Private _INPUT_Status_of_applicant As String
	
	Private _INPUT_name_and_address As String
	
	Private _UNIT_CER As String
	
	Private _APPROVED_DATE As System.Nullable(Of Date)
	
	Private _UTIL_DATE As System.Nullable(Of Date)
	
	Private _CPP_V_DOSAGE_FORM_ARE_2A31_1 As String
	
	Private _CPP_V_DOSAGE_FORM_ARE_2A31_2 As String
	
	Private _CPP_V_LICENSE_HOLDER_2A6_1 As String
	
	Private _CPP_V_LICENSE_HOLDER_2A6_2 As String
	
	Private _CPP_V_FOR_CERTIFICATE_2B1_1 As String
	
	Private _CPP_V_FOR_CERTIFICATE_2B1_2 As String
	
	Private _CPP_V_DOSAGE_FORM_ARE_2B21_1 As String
	
	Private _CPP_V_DOSAGE_FORM_ARE_2B21_2 As String
	
	Private _CPP_V_REMARKS_1 As String
	
	Private _CPP_V_REMARKS_2 As String
	
	Private _TRANS_ATTRIBUTE As String
	
	Private _PRODUCT_NAME As String
	
	Private _COMPANY_NAME As String
	
	Private _CPP_I_NAME_IF_APPLICABLE As String
	
	Private _CPP_I_YN_EXPORT_COUNTRY_I_II As String
	
	Private _CPP_I_YN_EXPORT_COUNTRY_I_III As String
	
	Private _LCNNO As String
	
	Private _NAME_FOR_EXPORT As String
	
	Private _CER_TYPE As String
	
	Private _DATE_PRINT_PAYMENT As System.Nullable(Of Date)
	
	Private _RGTNO As String
	
	Private _RGTTPCD As String
	
	Private _PVNCD As String
	
	Private _EACH_CONTAIN As String
	
	Private _EDIT_EACH_CONTAIN As String
	
	Private _REG_NO As String
	
	Private _REG_DATE As String
	
	Private _STAFF_REPLACEMENT As System.Nullable(Of Boolean)
	
	Private _drgtpcd As String
	
	Private _pvnabbr As String
	
	Private _lpvncd As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnRCVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCVDATEChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_UPLOADChanged()
    End Sub
    Partial Private Sub OnCITIZEN_DOWNLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_DOWNLOADChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnLCNSIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCNSIDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnADDRESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnADDRESS_IDChanged()
    End Sub
    Partial Private Sub OnFK_PROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnFK_PROCESS_IDChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnCOMMENT_ADMINChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENT_ADMINChanged()
    End Sub
    Partial Private Sub OnCOMMENT_BUSINESSChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENT_BUSINESSChanged()
    End Sub
    Partial Private Sub OnUNTIL_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUNTIL_DATEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_APPROVEDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_APPROVEDChanged()
    End Sub
    Partial Private Sub OnIMPORT_TO_COUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnIMPORT_TO_COUNTRYChanged()
    End Sub
    Partial Private Sub OnTRADNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTRADNAMEChanged()
    End Sub
    Partial Private Sub OnFORMULAChanging(value As String)
    End Sub
    Partial Private Sub OnFORMULAChanged()
    End Sub
    Partial Private Sub OnEXPORT_FROM_COUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnEXPORT_FROM_COUNTRYChanged()
    End Sub
    Partial Private Sub OnYN_STATUS_LICENSE_HOLDERChanging(value As String)
    End Sub
    Partial Private Sub OnYN_STATUS_LICENSE_HOLDERChanged()
    End Sub
    Partial Private Sub OnREGISTER_NEWCODEChanging(value As String)
    End Sub
    Partial Private Sub OnREGISTER_NEWCODEChanged()
    End Sub
    Partial Private Sub OnYN_SUMMARY_APPENDEDChanging(value As String)
    End Sub
    Partial Private Sub OnYN_SUMMARY_APPENDEDChanged()
    End Sub
    Partial Private Sub OnYN_WITH_THE_LICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnYN_WITH_THE_LICENSEChanged()
    End Sub
    Partial Private Sub OnYN_FROM_IS_PROCESSChanging(value As String)
    End Sub
    Partial Private Sub OnYN_FROM_IS_PROCESSChanged()
    End Sub
    Partial Private Sub OnYN_FROM_BEEN_INSPECTEDChanging(value As String)
    End Sub
    Partial Private Sub OnYN_FROM_BEEN_INSPECTEDChanged()
    End Sub
    Partial Private Sub OnYN_BY_ANOTHER_PARTYChanging(value As String)
    End Sub
    Partial Private Sub OnYN_BY_ANOTHER_PARTYChanged()
    End Sub
    Partial Private Sub OnINPUT_IF_NO_EXPLAINChanging(value As String)
    End Sub
    Partial Private Sub OnINPUT_IF_NO_EXPLAINChanged()
    End Sub
    Partial Private Sub OnYN_AUTHORIZATION_LACKINGChanging(value As String)
    End Sub
    Partial Private Sub OnYN_AUTHORIZATION_LACKINGChanged()
    End Sub
    Partial Private Sub OnCPP_YN_V_I_IIChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_YN_V_I_IIChanged()
    End Sub
    Partial Private Sub OnCPP_YN_V_I_IIIChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_YN_V_I_IIIChanged()
    End Sub
    Partial Private Sub OnCPP_YN_V_IIA_IIIIChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_YN_V_IIA_IIIIChanged()
    End Sub
    Partial Private Sub OnCPP_YN_V_IIA_VChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_YN_V_IIA_VChanged()
    End Sub
    Partial Private Sub OnCPP_YN_V_IIB_IIChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_YN_V_IIB_IIChanged()
    End Sub
    Partial Private Sub OnCPP_YN_V_IIB_III_IChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_YN_V_IIB_III_IChanged()
    End Sub
    Partial Private Sub OnCPP_YN_V_IIIChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_YN_V_IIIChanged()
    End Sub
    Partial Private Sub OnCPP_YN_V_III_IChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_YN_V_III_IChanged()
    End Sub
    Partial Private Sub OnCPP_YN_V_III_IIChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_YN_V_III_IIChanged()
    End Sub
    Partial Private Sub OnCPP_YN_V_III_IIIChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_YN_V_III_IIIChanged()
    End Sub
    Partial Private Sub OnCPP_YN_V_IIIIChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_YN_V_IIIIChanged()
    End Sub
    Partial Private Sub OnCPP_V_IF_NO_EXPLAINChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_V_IF_NO_EXPLAINChanged()
    End Sub
    Partial Private Sub OnCPP_YN_IIA_IIIChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_YN_IIA_IIIChanged()
    End Sub
    Partial Private Sub OnCPP_YN_IIB_III_IIChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_YN_IIB_III_IIChanged()
    End Sub
    Partial Private Sub OnCPP_YN_IIB_III_IIIChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_YN_IIB_III_IIIChanged()
    End Sub
    Partial Private Sub OnCPP_YN_IIB_III_IIIIChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_YN_IIB_III_IIIIChanged()
    End Sub
    Partial Private Sub OnXML_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnXML_NAMEChanged()
    End Sub
    Partial Private Sub OnYN_Health_OrganizationChanging(value As String)
    End Sub
    Partial Private Sub OnYN_Health_OrganizationChanged()
    End Sub
    Partial Private Sub OnINPUT_Applicant_for_certificateChanging(value As String)
    End Sub
    Partial Private Sub OnINPUT_Applicant_for_certificateChanged()
    End Sub
    Partial Private Sub OnINPUT_Status_of_applicantChanging(value As String)
    End Sub
    Partial Private Sub OnINPUT_Status_of_applicantChanged()
    End Sub
    Partial Private Sub OnINPUT_name_and_addressChanging(value As String)
    End Sub
    Partial Private Sub OnINPUT_name_and_addressChanged()
    End Sub
    Partial Private Sub OnUNIT_CERChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_CERChanged()
    End Sub
    Partial Private Sub OnAPPROVED_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPPROVED_DATEChanged()
    End Sub
    Partial Private Sub OnUTIL_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUTIL_DATEChanged()
    End Sub
    Partial Private Sub OnCPP_V_DOSAGE_FORM_ARE_2A31_1Changing(value As String)
    End Sub
    Partial Private Sub OnCPP_V_DOSAGE_FORM_ARE_2A31_1Changed()
    End Sub
    Partial Private Sub OnCPP_V_DOSAGE_FORM_ARE_2A31_2Changing(value As String)
    End Sub
    Partial Private Sub OnCPP_V_DOSAGE_FORM_ARE_2A31_2Changed()
    End Sub
    Partial Private Sub OnCPP_V_LICENSE_HOLDER_2A6_1Changing(value As String)
    End Sub
    Partial Private Sub OnCPP_V_LICENSE_HOLDER_2A6_1Changed()
    End Sub
    Partial Private Sub OnCPP_V_LICENSE_HOLDER_2A6_2Changing(value As String)
    End Sub
    Partial Private Sub OnCPP_V_LICENSE_HOLDER_2A6_2Changed()
    End Sub
    Partial Private Sub OnCPP_V_FOR_CERTIFICATE_2B1_1Changing(value As String)
    End Sub
    Partial Private Sub OnCPP_V_FOR_CERTIFICATE_2B1_1Changed()
    End Sub
    Partial Private Sub OnCPP_V_FOR_CERTIFICATE_2B1_2Changing(value As String)
    End Sub
    Partial Private Sub OnCPP_V_FOR_CERTIFICATE_2B1_2Changed()
    End Sub
    Partial Private Sub OnCPP_V_DOSAGE_FORM_ARE_2B21_1Changing(value As String)
    End Sub
    Partial Private Sub OnCPP_V_DOSAGE_FORM_ARE_2B21_1Changed()
    End Sub
    Partial Private Sub OnCPP_V_DOSAGE_FORM_ARE_2B21_2Changing(value As String)
    End Sub
    Partial Private Sub OnCPP_V_DOSAGE_FORM_ARE_2B21_2Changed()
    End Sub
    Partial Private Sub OnCPP_V_REMARKS_1Changing(value As String)
    End Sub
    Partial Private Sub OnCPP_V_REMARKS_1Changed()
    End Sub
    Partial Private Sub OnCPP_V_REMARKS_2Changing(value As String)
    End Sub
    Partial Private Sub OnCPP_V_REMARKS_2Changed()
    End Sub
    Partial Private Sub OnTRANS_ATTRIBUTEChanging(value As String)
    End Sub
    Partial Private Sub OnTRANS_ATTRIBUTEChanged()
    End Sub
    Partial Private Sub OnPRODUCT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_NAMEChanged()
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanged()
    End Sub
    Partial Private Sub OnCPP_I_NAME_IF_APPLICABLEChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_I_NAME_IF_APPLICABLEChanged()
    End Sub
    Partial Private Sub OnCPP_I_YN_EXPORT_COUNTRY_I_IIChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_I_YN_EXPORT_COUNTRY_I_IIChanged()
    End Sub
    Partial Private Sub OnCPP_I_YN_EXPORT_COUNTRY_I_IIIChanging(value As String)
    End Sub
    Partial Private Sub OnCPP_I_YN_EXPORT_COUNTRY_I_IIIChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnNAME_FOR_EXPORTChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_FOR_EXPORTChanged()
    End Sub
    Partial Private Sub OnCER_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnCER_TYPEChanged()
    End Sub
    Partial Private Sub OnDATE_PRINT_PAYMENTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_PRINT_PAYMENTChanged()
    End Sub
    Partial Private Sub OnRGTNOChanging(value As String)
    End Sub
    Partial Private Sub OnRGTNOChanged()
    End Sub
    Partial Private Sub OnRGTTPCDChanging(value As String)
    End Sub
    Partial Private Sub OnRGTTPCDChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As String)
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnEACH_CONTAINChanging(value As String)
    End Sub
    Partial Private Sub OnEACH_CONTAINChanged()
    End Sub
    Partial Private Sub OnEDIT_EACH_CONTAINChanging(value As String)
    End Sub
    Partial Private Sub OnEDIT_EACH_CONTAINChanged()
    End Sub
    Partial Private Sub OnREG_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREG_NOChanged()
    End Sub
    Partial Private Sub OnREG_DATEChanging(value As String)
    End Sub
    Partial Private Sub OnREG_DATEChanged()
    End Sub
    Partial Private Sub OnSTAFF_REPLACEMENTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSTAFF_REPLACEMENTChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnpvnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnpvnabbrChanged()
    End Sub
    Partial Private Sub OnlpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnlpvncdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(50)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE", DbType:="DateTime")>  _
	Public Property RCVDATE() As System.Nullable(Of Date)
		Get
			Return Me._RCVDATE
		End Get
		Set
			If (Me._RCVDATE.Equals(value) = false) Then
				Me.OnRCVDATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE = value
				Me.SendPropertyChanged("RCVDATE")
				Me.OnRCVDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_UPLOAD", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_UPLOAD() As String
		Get
			Return Me._CITIZEN_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_UPLOAD, value) = false) Then
				Me.OnCITIZEN_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_UPLOAD")
				Me.OnCITIZEN_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_DOWNLOAD", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_DOWNLOAD() As String
		Get
			Return Me._CITIZEN_DOWNLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_DOWNLOAD, value) = false) Then
				Me.OnCITIZEN_DOWNLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_DOWNLOAD = value
				Me.SendPropertyChanged("CITIZEN_DOWNLOAD")
				Me.OnCITIZEN_DOWNLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNSID", DbType:="Int")>  _
	Public Property LCNSID() As System.Nullable(Of Integer)
		Get
			Return Me._LCNSID
		End Get
		Set
			If (Me._LCNSID.Equals(value) = false) Then
				Me.OnLCNSIDChanging(value)
				Me.SendPropertyChanging
				Me._LCNSID = value
				Me.SendPropertyChanged("LCNSID")
				Me.OnLCNSIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_ID", DbType:="Int")>  _
	Public Property ADDRESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._ADDRESS_ID
		End Get
		Set
			If (Me._ADDRESS_ID.Equals(value) = false) Then
				Me.OnADDRESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_ID = value
				Me.SendPropertyChanged("ADDRESS_ID")
				Me.OnADDRESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property FK_PROCESS_ID() As String
		Get
			Return Me._FK_PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._FK_PROCESS_ID, value) = false) Then
				Me.OnFK_PROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_PROCESS_ID = value
				Me.SendPropertyChanged("FK_PROCESS_ID")
				Me.OnFK_PROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(50)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENT_ADMIN", DbType:="NVarChar(MAX)")>  _
	Public Property COMMENT_ADMIN() As String
		Get
			Return Me._COMMENT_ADMIN
		End Get
		Set
			If (String.Equals(Me._COMMENT_ADMIN, value) = false) Then
				Me.OnCOMMENT_ADMINChanging(value)
				Me.SendPropertyChanging
				Me._COMMENT_ADMIN = value
				Me.SendPropertyChanged("COMMENT_ADMIN")
				Me.OnCOMMENT_ADMINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENT_BUSINESS", DbType:="NVarChar(MAX)")>  _
	Public Property COMMENT_BUSINESS() As String
		Get
			Return Me._COMMENT_BUSINESS
		End Get
		Set
			If (String.Equals(Me._COMMENT_BUSINESS, value) = false) Then
				Me.OnCOMMENT_BUSINESSChanging(value)
				Me.SendPropertyChanging
				Me._COMMENT_BUSINESS = value
				Me.SendPropertyChanged("COMMENT_BUSINESS")
				Me.OnCOMMENT_BUSINESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNTIL_DATE", DbType:="DateTime")>  _
	Public Property UNTIL_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UNTIL_DATE
		End Get
		Set
			If (Me._UNTIL_DATE.Equals(value) = false) Then
				Me.OnUNTIL_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UNTIL_DATE = value
				Me.SendPropertyChanged("UNTIL_DATE")
				Me.OnUNTIL_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_APPROVED", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_APPROVED() As String
		Get
			Return Me._CITIZEN_APPROVED
		End Get
		Set
			If (String.Equals(Me._CITIZEN_APPROVED, value) = false) Then
				Me.OnCITIZEN_APPROVEDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_APPROVED = value
				Me.SendPropertyChanged("CITIZEN_APPROVED")
				Me.OnCITIZEN_APPROVEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMPORT_TO_COUNTRY", DbType:="NVarChar(MAX)")>  _
	Public Property IMPORT_TO_COUNTRY() As String
		Get
			Return Me._IMPORT_TO_COUNTRY
		End Get
		Set
			If (String.Equals(Me._IMPORT_TO_COUNTRY, value) = false) Then
				Me.OnIMPORT_TO_COUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._IMPORT_TO_COUNTRY = value
				Me.SendPropertyChanged("IMPORT_TO_COUNTRY")
				Me.OnIMPORT_TO_COUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRADNAME", DbType:="NVarChar(MAX)")>  _
	Public Property TRADNAME() As String
		Get
			Return Me._TRADNAME
		End Get
		Set
			If (String.Equals(Me._TRADNAME, value) = false) Then
				Me.OnTRADNAMEChanging(value)
				Me.SendPropertyChanging
				Me._TRADNAME = value
				Me.SendPropertyChanged("TRADNAME")
				Me.OnTRADNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMULA", DbType:="NVarChar(MAX)")>  _
	Public Property FORMULA() As String
		Get
			Return Me._FORMULA
		End Get
		Set
			If (String.Equals(Me._FORMULA, value) = false) Then
				Me.OnFORMULAChanging(value)
				Me.SendPropertyChanging
				Me._FORMULA = value
				Me.SendPropertyChanged("FORMULA")
				Me.OnFORMULAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPORT_FROM_COUNTRY", DbType:="NVarChar(MAX)")>  _
	Public Property EXPORT_FROM_COUNTRY() As String
		Get
			Return Me._EXPORT_FROM_COUNTRY
		End Get
		Set
			If (String.Equals(Me._EXPORT_FROM_COUNTRY, value) = false) Then
				Me.OnEXPORT_FROM_COUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._EXPORT_FROM_COUNTRY = value
				Me.SendPropertyChanged("EXPORT_FROM_COUNTRY")
				Me.OnEXPORT_FROM_COUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YN_STATUS_LICENSE_HOLDER", DbType:="NVarChar(50)")>  _
	Public Property YN_STATUS_LICENSE_HOLDER() As String
		Get
			Return Me._YN_STATUS_LICENSE_HOLDER
		End Get
		Set
			If (String.Equals(Me._YN_STATUS_LICENSE_HOLDER, value) = false) Then
				Me.OnYN_STATUS_LICENSE_HOLDERChanging(value)
				Me.SendPropertyChanging
				Me._YN_STATUS_LICENSE_HOLDER = value
				Me.SendPropertyChanged("YN_STATUS_LICENSE_HOLDER")
				Me.OnYN_STATUS_LICENSE_HOLDERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGISTER_NEWCODE", DbType:="NVarChar(50)")>  _
	Public Property REGISTER_NEWCODE() As String
		Get
			Return Me._REGISTER_NEWCODE
		End Get
		Set
			If (String.Equals(Me._REGISTER_NEWCODE, value) = false) Then
				Me.OnREGISTER_NEWCODEChanging(value)
				Me.SendPropertyChanging
				Me._REGISTER_NEWCODE = value
				Me.SendPropertyChanged("REGISTER_NEWCODE")
				Me.OnREGISTER_NEWCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YN_SUMMARY_APPENDED", DbType:="NVarChar(50)")>  _
	Public Property YN_SUMMARY_APPENDED() As String
		Get
			Return Me._YN_SUMMARY_APPENDED
		End Get
		Set
			If (String.Equals(Me._YN_SUMMARY_APPENDED, value) = false) Then
				Me.OnYN_SUMMARY_APPENDEDChanging(value)
				Me.SendPropertyChanging
				Me._YN_SUMMARY_APPENDED = value
				Me.SendPropertyChanged("YN_SUMMARY_APPENDED")
				Me.OnYN_SUMMARY_APPENDEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YN_WITH_THE_LICENSE", DbType:="NVarChar(50)")>  _
	Public Property YN_WITH_THE_LICENSE() As String
		Get
			Return Me._YN_WITH_THE_LICENSE
		End Get
		Set
			If (String.Equals(Me._YN_WITH_THE_LICENSE, value) = false) Then
				Me.OnYN_WITH_THE_LICENSEChanging(value)
				Me.SendPropertyChanging
				Me._YN_WITH_THE_LICENSE = value
				Me.SendPropertyChanged("YN_WITH_THE_LICENSE")
				Me.OnYN_WITH_THE_LICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YN_FROM_IS_PROCESS", DbType:="NVarChar(50)")>  _
	Public Property YN_FROM_IS_PROCESS() As String
		Get
			Return Me._YN_FROM_IS_PROCESS
		End Get
		Set
			If (String.Equals(Me._YN_FROM_IS_PROCESS, value) = false) Then
				Me.OnYN_FROM_IS_PROCESSChanging(value)
				Me.SendPropertyChanging
				Me._YN_FROM_IS_PROCESS = value
				Me.SendPropertyChanged("YN_FROM_IS_PROCESS")
				Me.OnYN_FROM_IS_PROCESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YN_FROM_BEEN_INSPECTED", DbType:="NVarChar(50)")>  _
	Public Property YN_FROM_BEEN_INSPECTED() As String
		Get
			Return Me._YN_FROM_BEEN_INSPECTED
		End Get
		Set
			If (String.Equals(Me._YN_FROM_BEEN_INSPECTED, value) = false) Then
				Me.OnYN_FROM_BEEN_INSPECTEDChanging(value)
				Me.SendPropertyChanging
				Me._YN_FROM_BEEN_INSPECTED = value
				Me.SendPropertyChanged("YN_FROM_BEEN_INSPECTED")
				Me.OnYN_FROM_BEEN_INSPECTEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YN_BY_ANOTHER_PARTY", DbType:="NVarChar(50)")>  _
	Public Property YN_BY_ANOTHER_PARTY() As String
		Get
			Return Me._YN_BY_ANOTHER_PARTY
		End Get
		Set
			If (String.Equals(Me._YN_BY_ANOTHER_PARTY, value) = false) Then
				Me.OnYN_BY_ANOTHER_PARTYChanging(value)
				Me.SendPropertyChanging
				Me._YN_BY_ANOTHER_PARTY = value
				Me.SendPropertyChanged("YN_BY_ANOTHER_PARTY")
				Me.OnYN_BY_ANOTHER_PARTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INPUT_IF_NO_EXPLAIN", DbType:="NVarChar(MAX)")>  _
	Public Property INPUT_IF_NO_EXPLAIN() As String
		Get
			Return Me._INPUT_IF_NO_EXPLAIN
		End Get
		Set
			If (String.Equals(Me._INPUT_IF_NO_EXPLAIN, value) = false) Then
				Me.OnINPUT_IF_NO_EXPLAINChanging(value)
				Me.SendPropertyChanging
				Me._INPUT_IF_NO_EXPLAIN = value
				Me.SendPropertyChanged("INPUT_IF_NO_EXPLAIN")
				Me.OnINPUT_IF_NO_EXPLAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YN_AUTHORIZATION_LACKING", DbType:="NVarChar(50)")>  _
	Public Property YN_AUTHORIZATION_LACKING() As String
		Get
			Return Me._YN_AUTHORIZATION_LACKING
		End Get
		Set
			If (String.Equals(Me._YN_AUTHORIZATION_LACKING, value) = false) Then
				Me.OnYN_AUTHORIZATION_LACKINGChanging(value)
				Me.SendPropertyChanging
				Me._YN_AUTHORIZATION_LACKING = value
				Me.SendPropertyChanged("YN_AUTHORIZATION_LACKING")
				Me.OnYN_AUTHORIZATION_LACKINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_YN_V_I_II", DbType:="NVarChar(50)")>  _
	Public Property CPP_YN_V_I_II() As String
		Get
			Return Me._CPP_YN_V_I_II
		End Get
		Set
			If (String.Equals(Me._CPP_YN_V_I_II, value) = false) Then
				Me.OnCPP_YN_V_I_IIChanging(value)
				Me.SendPropertyChanging
				Me._CPP_YN_V_I_II = value
				Me.SendPropertyChanged("CPP_YN_V_I_II")
				Me.OnCPP_YN_V_I_IIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_YN_V_I_III", DbType:="NVarChar(50)")>  _
	Public Property CPP_YN_V_I_III() As String
		Get
			Return Me._CPP_YN_V_I_III
		End Get
		Set
			If (String.Equals(Me._CPP_YN_V_I_III, value) = false) Then
				Me.OnCPP_YN_V_I_IIIChanging(value)
				Me.SendPropertyChanging
				Me._CPP_YN_V_I_III = value
				Me.SendPropertyChanged("CPP_YN_V_I_III")
				Me.OnCPP_YN_V_I_IIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_YN_V_IIA_IIII", DbType:="NVarChar(50)")>  _
	Public Property CPP_YN_V_IIA_IIII() As String
		Get
			Return Me._CPP_YN_V_IIA_IIII
		End Get
		Set
			If (String.Equals(Me._CPP_YN_V_IIA_IIII, value) = false) Then
				Me.OnCPP_YN_V_IIA_IIIIChanging(value)
				Me.SendPropertyChanging
				Me._CPP_YN_V_IIA_IIII = value
				Me.SendPropertyChanged("CPP_YN_V_IIA_IIII")
				Me.OnCPP_YN_V_IIA_IIIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_YN_V_IIA_V", DbType:="NVarChar(50)")>  _
	Public Property CPP_YN_V_IIA_V() As String
		Get
			Return Me._CPP_YN_V_IIA_V
		End Get
		Set
			If (String.Equals(Me._CPP_YN_V_IIA_V, value) = false) Then
				Me.OnCPP_YN_V_IIA_VChanging(value)
				Me.SendPropertyChanging
				Me._CPP_YN_V_IIA_V = value
				Me.SendPropertyChanged("CPP_YN_V_IIA_V")
				Me.OnCPP_YN_V_IIA_VChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_YN_V_IIB_II", DbType:="NVarChar(50)")>  _
	Public Property CPP_YN_V_IIB_II() As String
		Get
			Return Me._CPP_YN_V_IIB_II
		End Get
		Set
			If (String.Equals(Me._CPP_YN_V_IIB_II, value) = false) Then
				Me.OnCPP_YN_V_IIB_IIChanging(value)
				Me.SendPropertyChanging
				Me._CPP_YN_V_IIB_II = value
				Me.SendPropertyChanged("CPP_YN_V_IIB_II")
				Me.OnCPP_YN_V_IIB_IIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_YN_V_IIB_III_I", DbType:="NVarChar(50)")>  _
	Public Property CPP_YN_V_IIB_III_I() As String
		Get
			Return Me._CPP_YN_V_IIB_III_I
		End Get
		Set
			If (String.Equals(Me._CPP_YN_V_IIB_III_I, value) = false) Then
				Me.OnCPP_YN_V_IIB_III_IChanging(value)
				Me.SendPropertyChanging
				Me._CPP_YN_V_IIB_III_I = value
				Me.SendPropertyChanged("CPP_YN_V_IIB_III_I")
				Me.OnCPP_YN_V_IIB_III_IChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_YN_V_III", DbType:="NVarChar(50)")>  _
	Public Property CPP_YN_V_III() As String
		Get
			Return Me._CPP_YN_V_III
		End Get
		Set
			If (String.Equals(Me._CPP_YN_V_III, value) = false) Then
				Me.OnCPP_YN_V_IIIChanging(value)
				Me.SendPropertyChanging
				Me._CPP_YN_V_III = value
				Me.SendPropertyChanged("CPP_YN_V_III")
				Me.OnCPP_YN_V_IIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_YN_V_III_I", DbType:="NVarChar(50)")>  _
	Public Property CPP_YN_V_III_I() As String
		Get
			Return Me._CPP_YN_V_III_I
		End Get
		Set
			If (String.Equals(Me._CPP_YN_V_III_I, value) = false) Then
				Me.OnCPP_YN_V_III_IChanging(value)
				Me.SendPropertyChanging
				Me._CPP_YN_V_III_I = value
				Me.SendPropertyChanged("CPP_YN_V_III_I")
				Me.OnCPP_YN_V_III_IChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_YN_V_III_II", DbType:="NVarChar(50)")>  _
	Public Property CPP_YN_V_III_II() As String
		Get
			Return Me._CPP_YN_V_III_II
		End Get
		Set
			If (String.Equals(Me._CPP_YN_V_III_II, value) = false) Then
				Me.OnCPP_YN_V_III_IIChanging(value)
				Me.SendPropertyChanging
				Me._CPP_YN_V_III_II = value
				Me.SendPropertyChanged("CPP_YN_V_III_II")
				Me.OnCPP_YN_V_III_IIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_YN_V_III_III", DbType:="NVarChar(50)")>  _
	Public Property CPP_YN_V_III_III() As String
		Get
			Return Me._CPP_YN_V_III_III
		End Get
		Set
			If (String.Equals(Me._CPP_YN_V_III_III, value) = false) Then
				Me.OnCPP_YN_V_III_IIIChanging(value)
				Me.SendPropertyChanging
				Me._CPP_YN_V_III_III = value
				Me.SendPropertyChanged("CPP_YN_V_III_III")
				Me.OnCPP_YN_V_III_IIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_YN_V_IIII", DbType:="NVarChar(50)")>  _
	Public Property CPP_YN_V_IIII() As String
		Get
			Return Me._CPP_YN_V_IIII
		End Get
		Set
			If (String.Equals(Me._CPP_YN_V_IIII, value) = false) Then
				Me.OnCPP_YN_V_IIIIChanging(value)
				Me.SendPropertyChanging
				Me._CPP_YN_V_IIII = value
				Me.SendPropertyChanged("CPP_YN_V_IIII")
				Me.OnCPP_YN_V_IIIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_V_IF_NO_EXPLAIN", DbType:="NVarChar(MAX)")>  _
	Public Property CPP_V_IF_NO_EXPLAIN() As String
		Get
			Return Me._CPP_V_IF_NO_EXPLAIN
		End Get
		Set
			If (String.Equals(Me._CPP_V_IF_NO_EXPLAIN, value) = false) Then
				Me.OnCPP_V_IF_NO_EXPLAINChanging(value)
				Me.SendPropertyChanging
				Me._CPP_V_IF_NO_EXPLAIN = value
				Me.SendPropertyChanged("CPP_V_IF_NO_EXPLAIN")
				Me.OnCPP_V_IF_NO_EXPLAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_YN_IIA_III", DbType:="NVarChar(50)")>  _
	Public Property CPP_YN_IIA_III() As String
		Get
			Return Me._CPP_YN_IIA_III
		End Get
		Set
			If (String.Equals(Me._CPP_YN_IIA_III, value) = false) Then
				Me.OnCPP_YN_IIA_IIIChanging(value)
				Me.SendPropertyChanging
				Me._CPP_YN_IIA_III = value
				Me.SendPropertyChanged("CPP_YN_IIA_III")
				Me.OnCPP_YN_IIA_IIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_YN_IIB_III_II", DbType:="NVarChar(50)")>  _
	Public Property CPP_YN_IIB_III_II() As String
		Get
			Return Me._CPP_YN_IIB_III_II
		End Get
		Set
			If (String.Equals(Me._CPP_YN_IIB_III_II, value) = false) Then
				Me.OnCPP_YN_IIB_III_IIChanging(value)
				Me.SendPropertyChanging
				Me._CPP_YN_IIB_III_II = value
				Me.SendPropertyChanged("CPP_YN_IIB_III_II")
				Me.OnCPP_YN_IIB_III_IIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_YN_IIB_III_III", DbType:="NVarChar(50)")>  _
	Public Property CPP_YN_IIB_III_III() As String
		Get
			Return Me._CPP_YN_IIB_III_III
		End Get
		Set
			If (String.Equals(Me._CPP_YN_IIB_III_III, value) = false) Then
				Me.OnCPP_YN_IIB_III_IIIChanging(value)
				Me.SendPropertyChanging
				Me._CPP_YN_IIB_III_III = value
				Me.SendPropertyChanged("CPP_YN_IIB_III_III")
				Me.OnCPP_YN_IIB_III_IIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_YN_IIB_III_IIII", DbType:="NVarChar(50)")>  _
	Public Property CPP_YN_IIB_III_IIII() As String
		Get
			Return Me._CPP_YN_IIB_III_IIII
		End Get
		Set
			If (String.Equals(Me._CPP_YN_IIB_III_IIII, value) = false) Then
				Me.OnCPP_YN_IIB_III_IIIIChanging(value)
				Me.SendPropertyChanging
				Me._CPP_YN_IIB_III_IIII = value
				Me.SendPropertyChanged("CPP_YN_IIB_III_IIII")
				Me.OnCPP_YN_IIB_III_IIIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_NAME", DbType:="NVarChar(50)")>  _
	Public Property XML_NAME() As String
		Get
			Return Me._XML_NAME
		End Get
		Set
			If (String.Equals(Me._XML_NAME, value) = false) Then
				Me.OnXML_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._XML_NAME = value
				Me.SendPropertyChanged("XML_NAME")
				Me.OnXML_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YN_Health_Organization", DbType:="NVarChar(50)")>  _
	Public Property YN_Health_Organization() As String
		Get
			Return Me._YN_Health_Organization
		End Get
		Set
			If (String.Equals(Me._YN_Health_Organization, value) = false) Then
				Me.OnYN_Health_OrganizationChanging(value)
				Me.SendPropertyChanging
				Me._YN_Health_Organization = value
				Me.SendPropertyChanged("YN_Health_Organization")
				Me.OnYN_Health_OrganizationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INPUT_Applicant_for_certificate", DbType:="NVarChar(MAX)")>  _
	Public Property INPUT_Applicant_for_certificate() As String
		Get
			Return Me._INPUT_Applicant_for_certificate
		End Get
		Set
			If (String.Equals(Me._INPUT_Applicant_for_certificate, value) = false) Then
				Me.OnINPUT_Applicant_for_certificateChanging(value)
				Me.SendPropertyChanging
				Me._INPUT_Applicant_for_certificate = value
				Me.SendPropertyChanged("INPUT_Applicant_for_certificate")
				Me.OnINPUT_Applicant_for_certificateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INPUT_Status_of_applicant", DbType:="NVarChar(MAX)")>  _
	Public Property INPUT_Status_of_applicant() As String
		Get
			Return Me._INPUT_Status_of_applicant
		End Get
		Set
			If (String.Equals(Me._INPUT_Status_of_applicant, value) = false) Then
				Me.OnINPUT_Status_of_applicantChanging(value)
				Me.SendPropertyChanging
				Me._INPUT_Status_of_applicant = value
				Me.SendPropertyChanged("INPUT_Status_of_applicant")
				Me.OnINPUT_Status_of_applicantChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INPUT_name_and_address", DbType:="NVarChar(MAX)")>  _
	Public Property INPUT_name_and_address() As String
		Get
			Return Me._INPUT_name_and_address
		End Get
		Set
			If (String.Equals(Me._INPUT_name_and_address, value) = false) Then
				Me.OnINPUT_name_and_addressChanging(value)
				Me.SendPropertyChanging
				Me._INPUT_name_and_address = value
				Me.SendPropertyChanged("INPUT_name_and_address")
				Me.OnINPUT_name_and_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_CER", DbType:="NVarChar(50)")>  _
	Public Property UNIT_CER() As String
		Get
			Return Me._UNIT_CER
		End Get
		Set
			If (String.Equals(Me._UNIT_CER, value) = false) Then
				Me.OnUNIT_CERChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_CER = value
				Me.SendPropertyChanged("UNIT_CER")
				Me.OnUNIT_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVED_DATE", DbType:="DateTime")>  _
	Public Property APPROVED_DATE() As System.Nullable(Of Date)
		Get
			Return Me._APPROVED_DATE
		End Get
		Set
			If (Me._APPROVED_DATE.Equals(value) = false) Then
				Me.OnAPPROVED_DATEChanging(value)
				Me.SendPropertyChanging
				Me._APPROVED_DATE = value
				Me.SendPropertyChanged("APPROVED_DATE")
				Me.OnAPPROVED_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UTIL_DATE", DbType:="DateTime")>  _
	Public Property UTIL_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UTIL_DATE
		End Get
		Set
			If (Me._UTIL_DATE.Equals(value) = false) Then
				Me.OnUTIL_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UTIL_DATE = value
				Me.SendPropertyChanged("UTIL_DATE")
				Me.OnUTIL_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_V_DOSAGE_FORM_ARE_2A31_1", DbType:="NVarChar(MAX)")>  _
	Public Property CPP_V_DOSAGE_FORM_ARE_2A31_1() As String
		Get
			Return Me._CPP_V_DOSAGE_FORM_ARE_2A31_1
		End Get
		Set
			If (String.Equals(Me._CPP_V_DOSAGE_FORM_ARE_2A31_1, value) = false) Then
				Me.OnCPP_V_DOSAGE_FORM_ARE_2A31_1Changing(value)
				Me.SendPropertyChanging
				Me._CPP_V_DOSAGE_FORM_ARE_2A31_1 = value
				Me.SendPropertyChanged("CPP_V_DOSAGE_FORM_ARE_2A31_1")
				Me.OnCPP_V_DOSAGE_FORM_ARE_2A31_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_V_DOSAGE_FORM_ARE_2A31_2", DbType:="NVarChar(MAX)")>  _
	Public Property CPP_V_DOSAGE_FORM_ARE_2A31_2() As String
		Get
			Return Me._CPP_V_DOSAGE_FORM_ARE_2A31_2
		End Get
		Set
			If (String.Equals(Me._CPP_V_DOSAGE_FORM_ARE_2A31_2, value) = false) Then
				Me.OnCPP_V_DOSAGE_FORM_ARE_2A31_2Changing(value)
				Me.SendPropertyChanging
				Me._CPP_V_DOSAGE_FORM_ARE_2A31_2 = value
				Me.SendPropertyChanged("CPP_V_DOSAGE_FORM_ARE_2A31_2")
				Me.OnCPP_V_DOSAGE_FORM_ARE_2A31_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_V_LICENSE_HOLDER_2A6_1", DbType:="NVarChar(MAX)")>  _
	Public Property CPP_V_LICENSE_HOLDER_2A6_1() As String
		Get
			Return Me._CPP_V_LICENSE_HOLDER_2A6_1
		End Get
		Set
			If (String.Equals(Me._CPP_V_LICENSE_HOLDER_2A6_1, value) = false) Then
				Me.OnCPP_V_LICENSE_HOLDER_2A6_1Changing(value)
				Me.SendPropertyChanging
				Me._CPP_V_LICENSE_HOLDER_2A6_1 = value
				Me.SendPropertyChanged("CPP_V_LICENSE_HOLDER_2A6_1")
				Me.OnCPP_V_LICENSE_HOLDER_2A6_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_V_LICENSE_HOLDER_2A6_2", DbType:="NVarChar(MAX)")>  _
	Public Property CPP_V_LICENSE_HOLDER_2A6_2() As String
		Get
			Return Me._CPP_V_LICENSE_HOLDER_2A6_2
		End Get
		Set
			If (String.Equals(Me._CPP_V_LICENSE_HOLDER_2A6_2, value) = false) Then
				Me.OnCPP_V_LICENSE_HOLDER_2A6_2Changing(value)
				Me.SendPropertyChanging
				Me._CPP_V_LICENSE_HOLDER_2A6_2 = value
				Me.SendPropertyChanged("CPP_V_LICENSE_HOLDER_2A6_2")
				Me.OnCPP_V_LICENSE_HOLDER_2A6_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_V_FOR_CERTIFICATE_2B1_1", DbType:="NVarChar(MAX)")>  _
	Public Property CPP_V_FOR_CERTIFICATE_2B1_1() As String
		Get
			Return Me._CPP_V_FOR_CERTIFICATE_2B1_1
		End Get
		Set
			If (String.Equals(Me._CPP_V_FOR_CERTIFICATE_2B1_1, value) = false) Then
				Me.OnCPP_V_FOR_CERTIFICATE_2B1_1Changing(value)
				Me.SendPropertyChanging
				Me._CPP_V_FOR_CERTIFICATE_2B1_1 = value
				Me.SendPropertyChanged("CPP_V_FOR_CERTIFICATE_2B1_1")
				Me.OnCPP_V_FOR_CERTIFICATE_2B1_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_V_FOR_CERTIFICATE_2B1_2", DbType:="NVarChar(MAX)")>  _
	Public Property CPP_V_FOR_CERTIFICATE_2B1_2() As String
		Get
			Return Me._CPP_V_FOR_CERTIFICATE_2B1_2
		End Get
		Set
			If (String.Equals(Me._CPP_V_FOR_CERTIFICATE_2B1_2, value) = false) Then
				Me.OnCPP_V_FOR_CERTIFICATE_2B1_2Changing(value)
				Me.SendPropertyChanging
				Me._CPP_V_FOR_CERTIFICATE_2B1_2 = value
				Me.SendPropertyChanged("CPP_V_FOR_CERTIFICATE_2B1_2")
				Me.OnCPP_V_FOR_CERTIFICATE_2B1_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_V_DOSAGE_FORM_ARE_2B21_1", DbType:="NVarChar(MAX)")>  _
	Public Property CPP_V_DOSAGE_FORM_ARE_2B21_1() As String
		Get
			Return Me._CPP_V_DOSAGE_FORM_ARE_2B21_1
		End Get
		Set
			If (String.Equals(Me._CPP_V_DOSAGE_FORM_ARE_2B21_1, value) = false) Then
				Me.OnCPP_V_DOSAGE_FORM_ARE_2B21_1Changing(value)
				Me.SendPropertyChanging
				Me._CPP_V_DOSAGE_FORM_ARE_2B21_1 = value
				Me.SendPropertyChanged("CPP_V_DOSAGE_FORM_ARE_2B21_1")
				Me.OnCPP_V_DOSAGE_FORM_ARE_2B21_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_V_DOSAGE_FORM_ARE_2B21_2", DbType:="NVarChar(MAX)")>  _
	Public Property CPP_V_DOSAGE_FORM_ARE_2B21_2() As String
		Get
			Return Me._CPP_V_DOSAGE_FORM_ARE_2B21_2
		End Get
		Set
			If (String.Equals(Me._CPP_V_DOSAGE_FORM_ARE_2B21_2, value) = false) Then
				Me.OnCPP_V_DOSAGE_FORM_ARE_2B21_2Changing(value)
				Me.SendPropertyChanging
				Me._CPP_V_DOSAGE_FORM_ARE_2B21_2 = value
				Me.SendPropertyChanged("CPP_V_DOSAGE_FORM_ARE_2B21_2")
				Me.OnCPP_V_DOSAGE_FORM_ARE_2B21_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_V_REMARKS_1", DbType:="NVarChar(MAX)")>  _
	Public Property CPP_V_REMARKS_1() As String
		Get
			Return Me._CPP_V_REMARKS_1
		End Get
		Set
			If (String.Equals(Me._CPP_V_REMARKS_1, value) = false) Then
				Me.OnCPP_V_REMARKS_1Changing(value)
				Me.SendPropertyChanging
				Me._CPP_V_REMARKS_1 = value
				Me.SendPropertyChanged("CPP_V_REMARKS_1")
				Me.OnCPP_V_REMARKS_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_V_REMARKS_2", DbType:="NVarChar(MAX)")>  _
	Public Property CPP_V_REMARKS_2() As String
		Get
			Return Me._CPP_V_REMARKS_2
		End Get
		Set
			If (String.Equals(Me._CPP_V_REMARKS_2, value) = false) Then
				Me.OnCPP_V_REMARKS_2Changing(value)
				Me.SendPropertyChanging
				Me._CPP_V_REMARKS_2 = value
				Me.SendPropertyChanged("CPP_V_REMARKS_2")
				Me.OnCPP_V_REMARKS_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANS_ATTRIBUTE", DbType:="NVarChar(MAX)")>  _
	Public Property TRANS_ATTRIBUTE() As String
		Get
			Return Me._TRANS_ATTRIBUTE
		End Get
		Set
			If (String.Equals(Me._TRANS_ATTRIBUTE, value) = false) Then
				Me.OnTRANS_ATTRIBUTEChanging(value)
				Me.SendPropertyChanging
				Me._TRANS_ATTRIBUTE = value
				Me.SendPropertyChanged("TRANS_ATTRIBUTE")
				Me.OnTRANS_ATTRIBUTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_NAME() As String
		Get
			Return Me._PRODUCT_NAME
		End Get
		Set
			If (String.Equals(Me._PRODUCT_NAME, value) = false) Then
				Me.OnPRODUCT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_NAME = value
				Me.SendPropertyChanged("PRODUCT_NAME")
				Me.OnPRODUCT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property COMPANY_NAME() As String
		Get
			Return Me._COMPANY_NAME
		End Get
		Set
			If (String.Equals(Me._COMPANY_NAME, value) = false) Then
				Me.OnCOMPANY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_NAME = value
				Me.SendPropertyChanged("COMPANY_NAME")
				Me.OnCOMPANY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_I_NAME_IF_APPLICABLE", DbType:="NVarChar(MAX)")>  _
	Public Property CPP_I_NAME_IF_APPLICABLE() As String
		Get
			Return Me._CPP_I_NAME_IF_APPLICABLE
		End Get
		Set
			If (String.Equals(Me._CPP_I_NAME_IF_APPLICABLE, value) = false) Then
				Me.OnCPP_I_NAME_IF_APPLICABLEChanging(value)
				Me.SendPropertyChanging
				Me._CPP_I_NAME_IF_APPLICABLE = value
				Me.SendPropertyChanged("CPP_I_NAME_IF_APPLICABLE")
				Me.OnCPP_I_NAME_IF_APPLICABLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_I_YN_EXPORT_COUNTRY_I_II", DbType:="NVarChar(50)")>  _
	Public Property CPP_I_YN_EXPORT_COUNTRY_I_II() As String
		Get
			Return Me._CPP_I_YN_EXPORT_COUNTRY_I_II
		End Get
		Set
			If (String.Equals(Me._CPP_I_YN_EXPORT_COUNTRY_I_II, value) = false) Then
				Me.OnCPP_I_YN_EXPORT_COUNTRY_I_IIChanging(value)
				Me.SendPropertyChanging
				Me._CPP_I_YN_EXPORT_COUNTRY_I_II = value
				Me.SendPropertyChanged("CPP_I_YN_EXPORT_COUNTRY_I_II")
				Me.OnCPP_I_YN_EXPORT_COUNTRY_I_IIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPP_I_YN_EXPORT_COUNTRY_I_III", DbType:="NVarChar(50)")>  _
	Public Property CPP_I_YN_EXPORT_COUNTRY_I_III() As String
		Get
			Return Me._CPP_I_YN_EXPORT_COUNTRY_I_III
		End Get
		Set
			If (String.Equals(Me._CPP_I_YN_EXPORT_COUNTRY_I_III, value) = false) Then
				Me.OnCPP_I_YN_EXPORT_COUNTRY_I_IIIChanging(value)
				Me.SendPropertyChanging
				Me._CPP_I_YN_EXPORT_COUNTRY_I_III = value
				Me.SendPropertyChanged("CPP_I_YN_EXPORT_COUNTRY_I_III")
				Me.OnCPP_I_YN_EXPORT_COUNTRY_I_IIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_FOR_EXPORT", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_FOR_EXPORT() As String
		Get
			Return Me._NAME_FOR_EXPORT
		End Get
		Set
			If (String.Equals(Me._NAME_FOR_EXPORT, value) = false) Then
				Me.OnNAME_FOR_EXPORTChanging(value)
				Me.SendPropertyChanging
				Me._NAME_FOR_EXPORT = value
				Me.SendPropertyChanged("NAME_FOR_EXPORT")
				Me.OnNAME_FOR_EXPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_TYPE", DbType:="NVarChar(50)")>  _
	Public Property CER_TYPE() As String
		Get
			Return Me._CER_TYPE
		End Get
		Set
			If (String.Equals(Me._CER_TYPE, value) = false) Then
				Me.OnCER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CER_TYPE = value
				Me.SendPropertyChanged("CER_TYPE")
				Me.OnCER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_PRINT_PAYMENT", DbType:="DateTime")>  _
	Public Property DATE_PRINT_PAYMENT() As System.Nullable(Of Date)
		Get
			Return Me._DATE_PRINT_PAYMENT
		End Get
		Set
			If (Me._DATE_PRINT_PAYMENT.Equals(value) = false) Then
				Me.OnDATE_PRINT_PAYMENTChanging(value)
				Me.SendPropertyChanging
				Me._DATE_PRINT_PAYMENT = value
				Me.SendPropertyChanged("DATE_PRINT_PAYMENT")
				Me.OnDATE_PRINT_PAYMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTNO", DbType:="NVarChar(50)")>  _
	Public Property RGTNO() As String
		Get
			Return Me._RGTNO
		End Get
		Set
			If (String.Equals(Me._RGTNO, value) = false) Then
				Me.OnRGTNOChanging(value)
				Me.SendPropertyChanging
				Me._RGTNO = value
				Me.SendPropertyChanged("RGTNO")
				Me.OnRGTNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTTPCD", DbType:="NVarChar(50)")>  _
	Public Property RGTTPCD() As String
		Get
			Return Me._RGTTPCD
		End Get
		Set
			If (String.Equals(Me._RGTTPCD, value) = false) Then
				Me.OnRGTTPCDChanging(value)
				Me.SendPropertyChanging
				Me._RGTTPCD = value
				Me.SendPropertyChanged("RGTTPCD")
				Me.OnRGTTPCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="NVarChar(50)")>  _
	Public Property PVNCD() As String
		Get
			Return Me._PVNCD
		End Get
		Set
			If (String.Equals(Me._PVNCD, value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EACH_CONTAIN", DbType:="NVarChar(MAX)")>  _
	Public Property EACH_CONTAIN() As String
		Get
			Return Me._EACH_CONTAIN
		End Get
		Set
			If (String.Equals(Me._EACH_CONTAIN, value) = false) Then
				Me.OnEACH_CONTAINChanging(value)
				Me.SendPropertyChanging
				Me._EACH_CONTAIN = value
				Me.SendPropertyChanged("EACH_CONTAIN")
				Me.OnEACH_CONTAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_EACH_CONTAIN", DbType:="NVarChar(MAX)")>  _
	Public Property EDIT_EACH_CONTAIN() As String
		Get
			Return Me._EDIT_EACH_CONTAIN
		End Get
		Set
			If (String.Equals(Me._EDIT_EACH_CONTAIN, value) = false) Then
				Me.OnEDIT_EACH_CONTAINChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_EACH_CONTAIN = value
				Me.SendPropertyChanged("EDIT_EACH_CONTAIN")
				Me.OnEDIT_EACH_CONTAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REG_NO", DbType:="NVarChar(50)")>  _
	Public Property REG_NO() As String
		Get
			Return Me._REG_NO
		End Get
		Set
			If (String.Equals(Me._REG_NO, value) = false) Then
				Me.OnREG_NOChanging(value)
				Me.SendPropertyChanging
				Me._REG_NO = value
				Me.SendPropertyChanged("REG_NO")
				Me.OnREG_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REG_DATE", DbType:="NVarChar(50)")>  _
	Public Property REG_DATE() As String
		Get
			Return Me._REG_DATE
		End Get
		Set
			If (String.Equals(Me._REG_DATE, value) = false) Then
				Me.OnREG_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REG_DATE = value
				Me.SendPropertyChanged("REG_DATE")
				Me.OnREG_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_REPLACEMENT", DbType:="Bit")>  _
	Public Property STAFF_REPLACEMENT() As System.Nullable(Of Boolean)
		Get
			Return Me._STAFF_REPLACEMENT
		End Get
		Set
			If (Me._STAFF_REPLACEMENT.Equals(value) = false) Then
				Me.OnSTAFF_REPLACEMENTChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_REPLACEMENT = value
				Me.SendPropertyChanged("STAFF_REPLACEMENT")
				Me.OnSTAFF_REPLACEMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NChar(10)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr", DbType:="NChar(10)")>  _
	Public Property pvnabbr() As String
		Get
			Return Me._pvnabbr
		End Get
		Set
			If (String.Equals(Me._pvnabbr, value) = false) Then
				Me.OnpvnabbrChanging(value)
				Me.SendPropertyChanging
				Me._pvnabbr = value
				Me.SendPropertyChanged("pvnabbr")
				Me.OnpvnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lpvncd", DbType:="NChar(10)")>  _
	Public Property lpvncd() As String
		Get
			Return Me._lpvncd
		End Get
		Set
			If (String.Equals(Me._lpvncd, value) = false) Then
				Me.OnlpvncdChanging(value)
				Me.SendPropertyChanging
				Me._lpvncd = value
				Me.SendPropertyChanged("lpvncd")
				Me.OnlpvncdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_DRUG_LORPOR")>  _
Partial Public Class CER_DRUG_LORPOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _RCVNO As System.Nullable(Of Integer)
	
	Private _RCVDATE As System.Nullable(Of Date)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _CITIZEN_UPLOAD As String
	
	Private _CITIZEN_DOWNLOAD As String
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _CITIZEN_APPROVED As String
	
	Private _LCNSID As String
	
	Private _PROCESS_ID As String
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _DL_ID As String
	
	Private _DRUG_NAME As String
	
	Private _PRODUCT_NO_BOTT As String
	
	Private _PRODUCT_NO_BOTT_LIQ As String
	
	Private _PRODUCT_NO_BOX As String
	
	Private _DATE_MFT As System.Nullable(Of Date)
	
	Private _DATE_EXP As System.Nullable(Of Date)
	
	Private _DATE_MFT_LIQ As System.Nullable(Of Date)
	
	Private _DATE_EXP_LIQ As System.Nullable(Of Date)
	
	Private _DATE_START As System.Nullable(Of Date)
	
	Private _DATE_APPROVED As System.Nullable(Of Date)
	
	Private _DATE_PRINT_PAYMENT As System.Nullable(Of Date)
	
	Private _DESCRIPTION As String
	
	Private _DESCRIPTION_DL As String
	
	Private _TOTAL_SUM As System.Nullable(Of Double)
	
	Private _TOTAL_SUM_UNIT As String
	
	Private _TYPE_CER As String
	
	Private _LCNNO As System.Nullable(Of Integer)
	
	Private _LCNTPCD As String
	
	Private _LCNTYPE As String
	
	Private _PVNCD As System.Nullable(Of Integer)
	
	Private _PVNABBR As String
	
	Private _LCNNO_DISPLAY As String
	
	Private _REF_CODE As String
	
	Private _PRODUCT_NAME As String
	
	Private _REG_NO As String
	
	Private _REG_DATE As System.Nullable(Of Date)
	
	Private _THANM As String
	
	Private _LICEN As String
	
	Private _LOCATION_MFT As String
	
	Private _LOCATION_MFT_LIQ As String
	
	Private _COUNTRY_MFT As String
	
	Private _COUNTRY_MFT_LIQ As String
	
	Private _APPROVE_STAFF As String
	
	Private _APPROVE_POSITION As String
	
	Private _NEWCODE As String
	
	Private _XML_NAME As String
	
	Private _RGTNO As System.Nullable(Of Integer)
	
	Private _RGTTPCD As String
	
	Private _UNIT_CER As String
	
	Private _COMMENT_ADMIN As String
	
	Private _WRITE_DATE As System.Nullable(Of Date)
	
	Private _WRITE_AT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnRCVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCVDATEChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_UPLOADChanged()
    End Sub
    Partial Private Sub OnCITIZEN_DOWNLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_DOWNLOADChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_APPROVEDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_APPROVEDChanged()
    End Sub
    Partial Private Sub OnLCNSIDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNSIDChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnDL_IDChanging(value As String)
    End Sub
    Partial Private Sub OnDL_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NAMEChanged()
    End Sub
    Partial Private Sub OnPRODUCT_NO_BOTTChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_NO_BOTTChanged()
    End Sub
    Partial Private Sub OnPRODUCT_NO_BOTT_LIQChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_NO_BOTT_LIQChanged()
    End Sub
    Partial Private Sub OnPRODUCT_NO_BOXChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_NO_BOXChanged()
    End Sub
    Partial Private Sub OnDATE_MFTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_MFTChanged()
    End Sub
    Partial Private Sub OnDATE_EXPChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_EXPChanged()
    End Sub
    Partial Private Sub OnDATE_MFT_LIQChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_MFT_LIQChanged()
    End Sub
    Partial Private Sub OnDATE_EXP_LIQChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_EXP_LIQChanged()
    End Sub
    Partial Private Sub OnDATE_STARTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_STARTChanged()
    End Sub
    Partial Private Sub OnDATE_APPROVEDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_APPROVEDChanged()
    End Sub
    Partial Private Sub OnDATE_PRINT_PAYMENTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_PRINT_PAYMENTChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnDESCRIPTION_DLChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTION_DLChanged()
    End Sub
    Partial Private Sub OnTOTAL_SUMChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTOTAL_SUMChanged()
    End Sub
    Partial Private Sub OnTOTAL_SUM_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnTOTAL_SUM_UNITChanged()
    End Sub
    Partial Private Sub OnTYPE_CERChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_CERChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnLCNTPCDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNTPCDChanged()
    End Sub
    Partial Private Sub OnLCNTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnLCNTYPEChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnPVNABBRChanging(value As String)
    End Sub
    Partial Private Sub OnPVNABBRChanged()
    End Sub
    Partial Private Sub OnLCNNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnPRODUCT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_NAMEChanged()
    End Sub
    Partial Private Sub OnREG_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREG_NOChanged()
    End Sub
    Partial Private Sub OnREG_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREG_DATEChanged()
    End Sub
    Partial Private Sub OnTHANMChanging(value As String)
    End Sub
    Partial Private Sub OnTHANMChanged()
    End Sub
    Partial Private Sub OnLICENChanging(value As String)
    End Sub
    Partial Private Sub OnLICENChanged()
    End Sub
    Partial Private Sub OnLOCATION_MFTChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_MFTChanged()
    End Sub
    Partial Private Sub OnLOCATION_MFT_LIQChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_MFT_LIQChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_MFTChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRY_MFTChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_MFT_LIQChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRY_MFT_LIQChanged()
    End Sub
    Partial Private Sub OnAPPROVE_STAFFChanging(value As String)
    End Sub
    Partial Private Sub OnAPPROVE_STAFFChanged()
    End Sub
    Partial Private Sub OnAPPROVE_POSITIONChanging(value As String)
    End Sub
    Partial Private Sub OnAPPROVE_POSITIONChanged()
    End Sub
    Partial Private Sub OnNEWCODEChanging(value As String)
    End Sub
    Partial Private Sub OnNEWCODEChanged()
    End Sub
    Partial Private Sub OnXML_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnXML_NAMEChanged()
    End Sub
    Partial Private Sub OnRGTNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRGTNOChanged()
    End Sub
    Partial Private Sub OnRGTTPCDChanging(value As String)
    End Sub
    Partial Private Sub OnRGTTPCDChanged()
    End Sub
    Partial Private Sub OnUNIT_CERChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_CERChanged()
    End Sub
    Partial Private Sub OnCOMMENT_ADMINChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENT_ADMINChanged()
    End Sub
    Partial Private Sub OnWRITE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnWRITE_DATEChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="Int")>  _
	Public Property RCVNO() As System.Nullable(Of Integer)
		Get
			Return Me._RCVNO
		End Get
		Set
			If (Me._RCVNO.Equals(value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE", DbType:="Date")>  _
	Public Property RCVDATE() As System.Nullable(Of Date)
		Get
			Return Me._RCVDATE
		End Get
		Set
			If (Me._RCVDATE.Equals(value) = false) Then
				Me.OnRCVDATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE = value
				Me.SendPropertyChanged("RCVDATE")
				Me.OnRCVDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_UPLOAD() As String
		Get
			Return Me._CITIZEN_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_UPLOAD, value) = false) Then
				Me.OnCITIZEN_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_UPLOAD")
				Me.OnCITIZEN_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_DOWNLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_DOWNLOAD() As String
		Get
			Return Me._CITIZEN_DOWNLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_DOWNLOAD, value) = false) Then
				Me.OnCITIZEN_DOWNLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_DOWNLOAD = value
				Me.SendPropertyChanged("CITIZEN_DOWNLOAD")
				Me.OnCITIZEN_DOWNLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_APPROVED", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_APPROVED() As String
		Get
			Return Me._CITIZEN_APPROVED
		End Get
		Set
			If (String.Equals(Me._CITIZEN_APPROVED, value) = false) Then
				Me.OnCITIZEN_APPROVEDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_APPROVED = value
				Me.SendPropertyChanged("CITIZEN_APPROVED")
				Me.OnCITIZEN_APPROVEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNSID", DbType:="NVarChar(MAX)")>  _
	Public Property LCNSID() As String
		Get
			Return Me._LCNSID
		End Get
		Set
			If (String.Equals(Me._LCNSID, value) = false) Then
				Me.OnLCNSIDChanging(value)
				Me.SendPropertyChanging
				Me._LCNSID = value
				Me.SendPropertyChanged("LCNSID")
				Me.OnLCNSIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DL_ID", DbType:="NVarChar(MAX)")>  _
	Public Property DL_ID() As String
		Get
			Return Me._DL_ID
		End Get
		Set
			If (String.Equals(Me._DL_ID, value) = false) Then
				Me.OnDL_IDChanging(value)
				Me.SendPropertyChanging
				Me._DL_ID = value
				Me.SendPropertyChanged("DL_ID")
				Me.OnDL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NAME() As String
		Get
			Return Me._DRUG_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_NAME, value) = false) Then
				Me.OnDRUG_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NAME = value
				Me.SendPropertyChanged("DRUG_NAME")
				Me.OnDRUG_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_NO_BOTT", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_NO_BOTT() As String
		Get
			Return Me._PRODUCT_NO_BOTT
		End Get
		Set
			If (String.Equals(Me._PRODUCT_NO_BOTT, value) = false) Then
				Me.OnPRODUCT_NO_BOTTChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_NO_BOTT = value
				Me.SendPropertyChanged("PRODUCT_NO_BOTT")
				Me.OnPRODUCT_NO_BOTTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_NO_BOTT_LIQ", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_NO_BOTT_LIQ() As String
		Get
			Return Me._PRODUCT_NO_BOTT_LIQ
		End Get
		Set
			If (String.Equals(Me._PRODUCT_NO_BOTT_LIQ, value) = false) Then
				Me.OnPRODUCT_NO_BOTT_LIQChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_NO_BOTT_LIQ = value
				Me.SendPropertyChanged("PRODUCT_NO_BOTT_LIQ")
				Me.OnPRODUCT_NO_BOTT_LIQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_NO_BOX", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_NO_BOX() As String
		Get
			Return Me._PRODUCT_NO_BOX
		End Get
		Set
			If (String.Equals(Me._PRODUCT_NO_BOX, value) = false) Then
				Me.OnPRODUCT_NO_BOXChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_NO_BOX = value
				Me.SendPropertyChanged("PRODUCT_NO_BOX")
				Me.OnPRODUCT_NO_BOXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_MFT", DbType:="Date")>  _
	Public Property DATE_MFT() As System.Nullable(Of Date)
		Get
			Return Me._DATE_MFT
		End Get
		Set
			If (Me._DATE_MFT.Equals(value) = false) Then
				Me.OnDATE_MFTChanging(value)
				Me.SendPropertyChanging
				Me._DATE_MFT = value
				Me.SendPropertyChanged("DATE_MFT")
				Me.OnDATE_MFTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_EXP", DbType:="Date")>  _
	Public Property DATE_EXP() As System.Nullable(Of Date)
		Get
			Return Me._DATE_EXP
		End Get
		Set
			If (Me._DATE_EXP.Equals(value) = false) Then
				Me.OnDATE_EXPChanging(value)
				Me.SendPropertyChanging
				Me._DATE_EXP = value
				Me.SendPropertyChanged("DATE_EXP")
				Me.OnDATE_EXPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_MFT_LIQ", DbType:="Date")>  _
	Public Property DATE_MFT_LIQ() As System.Nullable(Of Date)
		Get
			Return Me._DATE_MFT_LIQ
		End Get
		Set
			If (Me._DATE_MFT_LIQ.Equals(value) = false) Then
				Me.OnDATE_MFT_LIQChanging(value)
				Me.SendPropertyChanging
				Me._DATE_MFT_LIQ = value
				Me.SendPropertyChanged("DATE_MFT_LIQ")
				Me.OnDATE_MFT_LIQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_EXP_LIQ", DbType:="Date")>  _
	Public Property DATE_EXP_LIQ() As System.Nullable(Of Date)
		Get
			Return Me._DATE_EXP_LIQ
		End Get
		Set
			If (Me._DATE_EXP_LIQ.Equals(value) = false) Then
				Me.OnDATE_EXP_LIQChanging(value)
				Me.SendPropertyChanging
				Me._DATE_EXP_LIQ = value
				Me.SendPropertyChanged("DATE_EXP_LIQ")
				Me.OnDATE_EXP_LIQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_START", DbType:="Date")>  _
	Public Property DATE_START() As System.Nullable(Of Date)
		Get
			Return Me._DATE_START
		End Get
		Set
			If (Me._DATE_START.Equals(value) = false) Then
				Me.OnDATE_STARTChanging(value)
				Me.SendPropertyChanging
				Me._DATE_START = value
				Me.SendPropertyChanged("DATE_START")
				Me.OnDATE_STARTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_APPROVED", DbType:="Date")>  _
	Public Property DATE_APPROVED() As System.Nullable(Of Date)
		Get
			Return Me._DATE_APPROVED
		End Get
		Set
			If (Me._DATE_APPROVED.Equals(value) = false) Then
				Me.OnDATE_APPROVEDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_APPROVED = value
				Me.SendPropertyChanged("DATE_APPROVED")
				Me.OnDATE_APPROVEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_PRINT_PAYMENT", DbType:="Date")>  _
	Public Property DATE_PRINT_PAYMENT() As System.Nullable(Of Date)
		Get
			Return Me._DATE_PRINT_PAYMENT
		End Get
		Set
			If (Me._DATE_PRINT_PAYMENT.Equals(value) = false) Then
				Me.OnDATE_PRINT_PAYMENTChanging(value)
				Me.SendPropertyChanging
				Me._DATE_PRINT_PAYMENT = value
				Me.SendPropertyChanged("DATE_PRINT_PAYMENT")
				Me.OnDATE_PRINT_PAYMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION_DL", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION_DL() As String
		Get
			Return Me._DESCRIPTION_DL
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION_DL, value) = false) Then
				Me.OnDESCRIPTION_DLChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION_DL = value
				Me.SendPropertyChanged("DESCRIPTION_DL")
				Me.OnDESCRIPTION_DLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TOTAL_SUM", DbType:="Float")>  _
	Public Property TOTAL_SUM() As System.Nullable(Of Double)
		Get
			Return Me._TOTAL_SUM
		End Get
		Set
			If (Me._TOTAL_SUM.Equals(value) = false) Then
				Me.OnTOTAL_SUMChanging(value)
				Me.SendPropertyChanging
				Me._TOTAL_SUM = value
				Me.SendPropertyChanged("TOTAL_SUM")
				Me.OnTOTAL_SUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TOTAL_SUM_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property TOTAL_SUM_UNIT() As String
		Get
			Return Me._TOTAL_SUM_UNIT
		End Get
		Set
			If (String.Equals(Me._TOTAL_SUM_UNIT, value) = false) Then
				Me.OnTOTAL_SUM_UNITChanging(value)
				Me.SendPropertyChanging
				Me._TOTAL_SUM_UNIT = value
				Me.SendPropertyChanged("TOTAL_SUM_UNIT")
				Me.OnTOTAL_SUM_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_CER", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_CER() As String
		Get
			Return Me._TYPE_CER
		End Get
		Set
			If (String.Equals(Me._TYPE_CER, value) = false) Then
				Me.OnTYPE_CERChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_CER = value
				Me.SendPropertyChanged("TYPE_CER")
				Me.OnTYPE_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="Int")>  _
	Public Property LCNNO() As System.Nullable(Of Integer)
		Get
			Return Me._LCNNO
		End Get
		Set
			If (Me._LCNNO.Equals(value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNTPCD", DbType:="NVarChar(MAX)")>  _
	Public Property LCNTPCD() As String
		Get
			Return Me._LCNTPCD
		End Get
		Set
			If (String.Equals(Me._LCNTPCD, value) = false) Then
				Me.OnLCNTPCDChanging(value)
				Me.SendPropertyChanging
				Me._LCNTPCD = value
				Me.SendPropertyChanged("LCNTPCD")
				Me.OnLCNTPCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNTYPE", DbType:="NVarChar(MAX)")>  _
	Public Property LCNTYPE() As String
		Get
			Return Me._LCNTYPE
		End Get
		Set
			If (String.Equals(Me._LCNTYPE, value) = false) Then
				Me.OnLCNTYPEChanging(value)
				Me.SendPropertyChanging
				Me._LCNTYPE = value
				Me.SendPropertyChanged("LCNTYPE")
				Me.OnLCNTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="Int")>  _
	Public Property PVNCD() As System.Nullable(Of Integer)
		Get
			Return Me._PVNCD
		End Get
		Set
			If (Me._PVNCD.Equals(value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNABBR", DbType:="NVarChar(MAX)")>  _
	Public Property PVNABBR() As String
		Get
			Return Me._PVNABBR
		End Get
		Set
			If (String.Equals(Me._PVNABBR, value) = false) Then
				Me.OnPVNABBRChanging(value)
				Me.SendPropertyChanging
				Me._PVNABBR = value
				Me.SendPropertyChanged("PVNABBR")
				Me.OnPVNABBRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO_DISPLAY() As String
		Get
			Return Me._LCNNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._LCNNO_DISPLAY, value) = false) Then
				Me.OnLCNNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO_DISPLAY = value
				Me.SendPropertyChanged("LCNNO_DISPLAY")
				Me.OnLCNNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_NAME() As String
		Get
			Return Me._PRODUCT_NAME
		End Get
		Set
			If (String.Equals(Me._PRODUCT_NAME, value) = false) Then
				Me.OnPRODUCT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_NAME = value
				Me.SendPropertyChanged("PRODUCT_NAME")
				Me.OnPRODUCT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REG_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REG_NO() As String
		Get
			Return Me._REG_NO
		End Get
		Set
			If (String.Equals(Me._REG_NO, value) = false) Then
				Me.OnREG_NOChanging(value)
				Me.SendPropertyChanging
				Me._REG_NO = value
				Me.SendPropertyChanged("REG_NO")
				Me.OnREG_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REG_DATE", DbType:="Date")>  _
	Public Property REG_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REG_DATE
		End Get
		Set
			If (Me._REG_DATE.Equals(value) = false) Then
				Me.OnREG_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REG_DATE = value
				Me.SendPropertyChanged("REG_DATE")
				Me.OnREG_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_THANM", DbType:="NVarChar(MAX)")>  _
	Public Property THANM() As String
		Get
			Return Me._THANM
		End Get
		Set
			If (String.Equals(Me._THANM, value) = false) Then
				Me.OnTHANMChanging(value)
				Me.SendPropertyChanging
				Me._THANM = value
				Me.SendPropertyChanged("THANM")
				Me.OnTHANMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICEN", DbType:="NVarChar(MAX)")>  _
	Public Property LICEN() As String
		Get
			Return Me._LICEN
		End Get
		Set
			If (String.Equals(Me._LICEN, value) = false) Then
				Me.OnLICENChanging(value)
				Me.SendPropertyChanging
				Me._LICEN = value
				Me.SendPropertyChanged("LICEN")
				Me.OnLICENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_MFT", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_MFT() As String
		Get
			Return Me._LOCATION_MFT
		End Get
		Set
			If (String.Equals(Me._LOCATION_MFT, value) = false) Then
				Me.OnLOCATION_MFTChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_MFT = value
				Me.SendPropertyChanged("LOCATION_MFT")
				Me.OnLOCATION_MFTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_MFT_LIQ", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_MFT_LIQ() As String
		Get
			Return Me._LOCATION_MFT_LIQ
		End Get
		Set
			If (String.Equals(Me._LOCATION_MFT_LIQ, value) = false) Then
				Me.OnLOCATION_MFT_LIQChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_MFT_LIQ = value
				Me.SendPropertyChanged("LOCATION_MFT_LIQ")
				Me.OnLOCATION_MFT_LIQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_MFT", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY_MFT() As String
		Get
			Return Me._COUNTRY_MFT
		End Get
		Set
			If (String.Equals(Me._COUNTRY_MFT, value) = false) Then
				Me.OnCOUNTRY_MFTChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_MFT = value
				Me.SendPropertyChanged("COUNTRY_MFT")
				Me.OnCOUNTRY_MFTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_MFT_LIQ", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY_MFT_LIQ() As String
		Get
			Return Me._COUNTRY_MFT_LIQ
		End Get
		Set
			If (String.Equals(Me._COUNTRY_MFT_LIQ, value) = false) Then
				Me.OnCOUNTRY_MFT_LIQChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_MFT_LIQ = value
				Me.SendPropertyChanged("COUNTRY_MFT_LIQ")
				Me.OnCOUNTRY_MFT_LIQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVE_STAFF", DbType:="NVarChar(MAX)")>  _
	Public Property APPROVE_STAFF() As String
		Get
			Return Me._APPROVE_STAFF
		End Get
		Set
			If (String.Equals(Me._APPROVE_STAFF, value) = false) Then
				Me.OnAPPROVE_STAFFChanging(value)
				Me.SendPropertyChanging
				Me._APPROVE_STAFF = value
				Me.SendPropertyChanged("APPROVE_STAFF")
				Me.OnAPPROVE_STAFFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVE_POSITION", DbType:="NVarChar(MAX)")>  _
	Public Property APPROVE_POSITION() As String
		Get
			Return Me._APPROVE_POSITION
		End Get
		Set
			If (String.Equals(Me._APPROVE_POSITION, value) = false) Then
				Me.OnAPPROVE_POSITIONChanging(value)
				Me.SendPropertyChanging
				Me._APPROVE_POSITION = value
				Me.SendPropertyChanged("APPROVE_POSITION")
				Me.OnAPPROVE_POSITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEWCODE", DbType:="NVarChar(MAX)")>  _
	Public Property NEWCODE() As String
		Get
			Return Me._NEWCODE
		End Get
		Set
			If (String.Equals(Me._NEWCODE, value) = false) Then
				Me.OnNEWCODEChanging(value)
				Me.SendPropertyChanging
				Me._NEWCODE = value
				Me.SendPropertyChanged("NEWCODE")
				Me.OnNEWCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property XML_NAME() As String
		Get
			Return Me._XML_NAME
		End Get
		Set
			If (String.Equals(Me._XML_NAME, value) = false) Then
				Me.OnXML_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._XML_NAME = value
				Me.SendPropertyChanged("XML_NAME")
				Me.OnXML_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTNO", DbType:="Int")>  _
	Public Property RGTNO() As System.Nullable(Of Integer)
		Get
			Return Me._RGTNO
		End Get
		Set
			If (Me._RGTNO.Equals(value) = false) Then
				Me.OnRGTNOChanging(value)
				Me.SendPropertyChanging
				Me._RGTNO = value
				Me.SendPropertyChanged("RGTNO")
				Me.OnRGTNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTTPCD", DbType:="NVarChar(MAX)")>  _
	Public Property RGTTPCD() As String
		Get
			Return Me._RGTTPCD
		End Get
		Set
			If (String.Equals(Me._RGTTPCD, value) = false) Then
				Me.OnRGTTPCDChanging(value)
				Me.SendPropertyChanging
				Me._RGTTPCD = value
				Me.SendPropertyChanged("RGTTPCD")
				Me.OnRGTTPCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_CER", DbType:="NVarChar(50)")>  _
	Public Property UNIT_CER() As String
		Get
			Return Me._UNIT_CER
		End Get
		Set
			If (String.Equals(Me._UNIT_CER, value) = false) Then
				Me.OnUNIT_CERChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_CER = value
				Me.SendPropertyChanged("UNIT_CER")
				Me.OnUNIT_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENT_ADMIN", DbType:="NVarChar(MAX)")>  _
	Public Property COMMENT_ADMIN() As String
		Get
			Return Me._COMMENT_ADMIN
		End Get
		Set
			If (String.Equals(Me._COMMENT_ADMIN, value) = false) Then
				Me.OnCOMMENT_ADMINChanging(value)
				Me.SendPropertyChanging
				Me._COMMENT_ADMIN = value
				Me.SendPropertyChanged("COMMENT_ADMIN")
				Me.OnCOMMENT_ADMINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_DATE", DbType:="DateTime")>  _
	Public Property WRITE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._WRITE_DATE
		End Get
		Set
			If (Me._WRITE_DATE.Equals(value) = false) Then
				Me.OnWRITE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_DATE = value
				Me.SendPropertyChanged("WRITE_DATE")
				Me.OnWRITE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_DRUG_NAME_EXPORT")>  _
Partial Public Class CER_DRUG_NAME_EXPORT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _pvncd As Short
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rcvno As Integer
	
	Private _rid As Integer
	
	Private _drgexp As String
	
	Private _cntcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _IDA As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnpvncdChanging(value As Short)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As Integer)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As Integer)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OndrgexpChanging(value As String)
    End Sub
    Partial Private Sub OndrgexpChanged()
    End Sub
    Partial Private Sub OncntcdChanging(value As String)
    End Sub
    Partial Private Sub OncntcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt NOT NULL")>  _
	Public Property pvncd() As Short
		Get
			Return Me._pvncd
		End Get
		Set
			If ((Me._pvncd = value)  _
						= false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int NOT NULL")>  _
	Public Property rcvno() As Integer
		Get
			Return Me._rcvno
		End Get
		Set
			If ((Me._rcvno = value)  _
						= false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="Int NOT NULL")>  _
	Public Property rid() As Integer
		Get
			Return Me._rid
		End Get
		Set
			If ((Me._rid = value)  _
						= false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgexp", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property drgexp() As String
		Get
			Return Me._drgexp
		End Get
		Set
			If (String.Equals(Me._drgexp, value) = false) Then
				Me.OndrgexpChanging(value)
				Me.SendPropertyChanging
				Me._drgexp = value
				Me.SendPropertyChanged("drgexp")
				Me.OndrgexpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cntcd", DbType:="Char(3) NOT NULL", CanBeNull:=false)>  _
	Public Property cntcd() As String
		Get
			Return Me._cntcd
		End Get
		Set
			If (String.Equals(Me._cntcd, value) = false) Then
				Me.OncntcdChanging(value)
				Me.SendPropertyChanging
				Me._cntcd = value
				Me.SendPropertyChanged("cntcd")
				Me.OncntcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TEMPLATE_ATTACH")>  _
Partial Public Class TEMPLATE_ATTACH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _LCNTPCD As String
	
	Private _ATTACH_NAME As String
	
	Private _ATTACH_PIORITY As System.Nullable(Of Integer)
	
	Private _ATTACH_FILE_EXTENSION As String
	
	Private _conventpcd As String
	
	Private _TYPE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnLCNTPCDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNTPCDChanged()
    End Sub
    Partial Private Sub OnATTACH_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnATTACH_NAMEChanged()
    End Sub
    Partial Private Sub OnATTACH_PIORITYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATTACH_PIORITYChanged()
    End Sub
    Partial Private Sub OnATTACH_FILE_EXTENSIONChanging(value As String)
    End Sub
    Partial Private Sub OnATTACH_FILE_EXTENSIONChanged()
    End Sub
    Partial Private Sub OnconventpcdChanging(value As String)
    End Sub
    Partial Private Sub OnconventpcdChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNTPCD", DbType:="NVarChar(MAX)")>  _
	Public Property LCNTPCD() As String
		Get
			Return Me._LCNTPCD
		End Get
		Set
			If (String.Equals(Me._LCNTPCD, value) = false) Then
				Me.OnLCNTPCDChanging(value)
				Me.SendPropertyChanging
				Me._LCNTPCD = value
				Me.SendPropertyChanged("LCNTPCD")
				Me.OnLCNTPCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ATTACH_NAME() As String
		Get
			Return Me._ATTACH_NAME
		End Get
		Set
			If (String.Equals(Me._ATTACH_NAME, value) = false) Then
				Me.OnATTACH_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ATTACH_NAME = value
				Me.SendPropertyChanged("ATTACH_NAME")
				Me.OnATTACH_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_PIORITY", DbType:="Int")>  _
	Public Property ATTACH_PIORITY() As System.Nullable(Of Integer)
		Get
			Return Me._ATTACH_PIORITY
		End Get
		Set
			If (Me._ATTACH_PIORITY.Equals(value) = false) Then
				Me.OnATTACH_PIORITYChanging(value)
				Me.SendPropertyChanging
				Me._ATTACH_PIORITY = value
				Me.SendPropertyChanged("ATTACH_PIORITY")
				Me.OnATTACH_PIORITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_FILE_EXTENSION", DbType:="NVarChar(MAX)")>  _
	Public Property ATTACH_FILE_EXTENSION() As String
		Get
			Return Me._ATTACH_FILE_EXTENSION
		End Get
		Set
			If (String.Equals(Me._ATTACH_FILE_EXTENSION, value) = false) Then
				Me.OnATTACH_FILE_EXTENSIONChanging(value)
				Me.SendPropertyChanging
				Me._ATTACH_FILE_EXTENSION = value
				Me.SendPropertyChanged("ATTACH_FILE_EXTENSION")
				Me.OnATTACH_FILE_EXTENSIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_conventpcd", DbType:="NVarChar(MAX)")>  _
	Public Property conventpcd() As String
		Get
			Return Me._conventpcd
		End Get
		Set
			If (String.Equals(Me._conventpcd, value) = false) Then
				Me.OnconventpcdChanging(value)
				Me.SendPropertyChanging
				Me._conventpcd = value
				Me.SendPropertyChanged("conventpcd")
				Me.OnconventpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="Int")>  _
	Public Property TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE
		End Get
		Set
			If (Me._TYPE.Equals(value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_RCV_NUMBER")>  _
Partial Public Class GEN_RCV_NUMBER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FILE_ATTACH")>  _
Partial Public Class FILE_ATTACH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _NAME_FAKE As String
	
	Private _NAME_REAL As String
	
	Private _TYPE As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _DESCRIPTION As String
	
	Private _PATH As String
	
	Private _EXTENSTION As String
	
	Private _CREATEDATE As System.Nullable(Of Date)
	
	Private _UPDATEDATE As System.Nullable(Of Date)
	
	Private _LCNTPCD As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNAME_FAKEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_FAKEChanged()
    End Sub
    Partial Private Sub OnNAME_REALChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_REALChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPATHChanging(value As String)
    End Sub
    Partial Private Sub OnPATHChanged()
    End Sub
    Partial Private Sub OnEXTENSTIONChanging(value As String)
    End Sub
    Partial Private Sub OnEXTENSTIONChanged()
    End Sub
    Partial Private Sub OnCREATEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATEDATEChanged()
    End Sub
    Partial Private Sub OnUPDATEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATEDATEChanged()
    End Sub
    Partial Private Sub OnLCNTPCDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNTPCDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_FAKE", DbType:="VarChar(MAX)")>  _
	Public Property NAME_FAKE() As String
		Get
			Return Me._NAME_FAKE
		End Get
		Set
			If (String.Equals(Me._NAME_FAKE, value) = false) Then
				Me.OnNAME_FAKEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_FAKE = value
				Me.SendPropertyChanged("NAME_FAKE")
				Me.OnNAME_FAKEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_REAL", DbType:="VarChar(MAX)")>  _
	Public Property NAME_REAL() As String
		Get
			Return Me._NAME_REAL
		End Get
		Set
			If (String.Equals(Me._NAME_REAL, value) = false) Then
				Me.OnNAME_REALChanging(value)
				Me.SendPropertyChanging
				Me._NAME_REAL = value
				Me.SendPropertyChanged("NAME_REAL")
				Me.OnNAME_REALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="VarChar(MAX)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATH", DbType:="VarChar(MAX)")>  _
	Public Property PATH() As String
		Get
			Return Me._PATH
		End Get
		Set
			If (String.Equals(Me._PATH, value) = false) Then
				Me.OnPATHChanging(value)
				Me.SendPropertyChanging
				Me._PATH = value
				Me.SendPropertyChanged("PATH")
				Me.OnPATHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXTENSTION", DbType:="VarChar(MAX)")>  _
	Public Property EXTENSTION() As String
		Get
			Return Me._EXTENSTION
		End Get
		Set
			If (String.Equals(Me._EXTENSTION, value) = false) Then
				Me.OnEXTENSTIONChanging(value)
				Me.SendPropertyChanging
				Me._EXTENSTION = value
				Me.SendPropertyChanged("EXTENSTION")
				Me.OnEXTENSTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATEDATE", DbType:="DateTime")>  _
	Public Property CREATEDATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATEDATE
		End Get
		Set
			If (Me._CREATEDATE.Equals(value) = false) Then
				Me.OnCREATEDATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATEDATE = value
				Me.SendPropertyChanged("CREATEDATE")
				Me.OnCREATEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATEDATE", DbType:="DateTime")>  _
	Public Property UPDATEDATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATEDATE
		End Get
		Set
			If (Me._UPDATEDATE.Equals(value) = false) Then
				Me.OnUPDATEDATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATEDATE = value
				Me.SendPropertyChanged("UPDATEDATE")
				Me.OnUPDATEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNTPCD", DbType:="VarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property LCNTPCD() As String
		Get
			Return Me._LCNTPCD
		End Get
		Set
			If (String.Equals(Me._LCNTPCD, value) = false) Then
				Me.OnLCNTPCDChanging(value)
				Me.SendPropertyChanging
				Me._LCNTPCD = value
				Me.SendPropertyChanged("LCNTPCD")
				Me.OnLCNTPCDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TEMPLATE_PROCESS")>  _
Partial Public Class MAS_TEMPLATE_PROCESS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _LCNTYPECD As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _GROUPS As System.Nullable(Of Integer)
	
	Private _PREVIEW As System.Nullable(Of Integer)
	
	Private _PDF_TEMPLATE As String
	
	Private _XML_PATH As String
	
	Private _PDF_OUTPUT As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnLCNTYPECDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCNTYPECDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnGROUPSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUPSChanged()
    End Sub
    Partial Private Sub OnPREVIEWChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPREVIEWChanged()
    End Sub
    Partial Private Sub OnPDF_TEMPLATEChanging(value As String)
    End Sub
    Partial Private Sub OnPDF_TEMPLATEChanged()
    End Sub
    Partial Private Sub OnXML_PATHChanging(value As String)
    End Sub
    Partial Private Sub OnXML_PATHChanged()
    End Sub
    Partial Private Sub OnPDF_OUTPUTChanging(value As String)
    End Sub
    Partial Private Sub OnPDF_OUTPUTChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNTYPECD", DbType:="Int")>  _
	Public Property LCNTYPECD() As System.Nullable(Of Integer)
		Get
			Return Me._LCNTYPECD
		End Get
		Set
			If (Me._LCNTYPECD.Equals(value) = false) Then
				Me.OnLCNTYPECDChanging(value)
				Me.SendPropertyChanging
				Me._LCNTYPECD = value
				Me.SendPropertyChanged("LCNTYPECD")
				Me.OnLCNTYPECDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPS", DbType:="Int")>  _
	Public Property GROUPS() As System.Nullable(Of Integer)
		Get
			Return Me._GROUPS
		End Get
		Set
			If (Me._GROUPS.Equals(value) = false) Then
				Me.OnGROUPSChanging(value)
				Me.SendPropertyChanging
				Me._GROUPS = value
				Me.SendPropertyChanged("GROUPS")
				Me.OnGROUPSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREVIEW", DbType:="Int")>  _
	Public Property PREVIEW() As System.Nullable(Of Integer)
		Get
			Return Me._PREVIEW
		End Get
		Set
			If (Me._PREVIEW.Equals(value) = false) Then
				Me.OnPREVIEWChanging(value)
				Me.SendPropertyChanging
				Me._PREVIEW = value
				Me.SendPropertyChanged("PREVIEW")
				Me.OnPREVIEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_TEMPLATE", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_TEMPLATE() As String
		Get
			Return Me._PDF_TEMPLATE
		End Get
		Set
			If (String.Equals(Me._PDF_TEMPLATE, value) = false) Then
				Me.OnPDF_TEMPLATEChanging(value)
				Me.SendPropertyChanging
				Me._PDF_TEMPLATE = value
				Me.SendPropertyChanged("PDF_TEMPLATE")
				Me.OnPDF_TEMPLATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_PATH", DbType:="NVarChar(MAX)")>  _
	Public Property XML_PATH() As String
		Get
			Return Me._XML_PATH
		End Get
		Set
			If (String.Equals(Me._XML_PATH, value) = false) Then
				Me.OnXML_PATHChanging(value)
				Me.SendPropertyChanging
				Me._XML_PATH = value
				Me.SendPropertyChanged("XML_PATH")
				Me.OnXML_PATHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_OUTPUT", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_OUTPUT() As String
		Get
			Return Me._PDF_OUTPUT
		End Get
		Set
			If (String.Equals(Me._PDF_OUTPUT, value) = false) Then
				Me.OnPDF_OUTPUTChanging(value)
				Me.SendPropertyChanging
				Me._PDF_OUTPUT = value
				Me.SendPropertyChanged("PDF_OUTPUT")
				Me.OnPDF_OUTPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PROCESS")>  _
Partial Public Class MAS_PROCESS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PROCESS_ID As String
	
	Private _PROCESS_NAME As String
	
	Private _PROCESS_DESCRIPTION As String
	
	Private _GROUP_CER As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanged()
    End Sub
    Partial Private Sub OnPROCESS_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnGROUP_CERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_CERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="VarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_NAME() As String
		Get
			Return Me._PROCESS_NAME
		End Get
		Set
			If (String.Equals(Me._PROCESS_NAME, value) = false) Then
				Me.OnPROCESS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_NAME = value
				Me.SendPropertyChanged("PROCESS_NAME")
				Me.OnPROCESS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_DESCRIPTION() As String
		Get
			Return Me._PROCESS_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._PROCESS_DESCRIPTION, value) = false) Then
				Me.OnPROCESS_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_DESCRIPTION = value
				Me.SendPropertyChanged("PROCESS_DESCRIPTION")
				Me.OnPROCESS_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_CER", DbType:="Int")>  _
	Public Property GROUP_CER() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_CER
		End Get
		Set
			If (Me._GROUP_CER.Equals(value) = false) Then
				Me.OnGROUP_CERChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_CER = value
				Me.SendPropertyChanged("GROUP_CER")
				Me.OnGROUP_CERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
